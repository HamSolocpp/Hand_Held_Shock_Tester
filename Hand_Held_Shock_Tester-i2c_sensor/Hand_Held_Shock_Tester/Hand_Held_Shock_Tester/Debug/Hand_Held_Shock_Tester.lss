
Hand_Held_Shock_Tester.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003c  00800100  0000160c  000016a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000160c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000104  0080013c  0080013c  000016dc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000016dc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001738  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000270  00000000  00000000  00001778  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000265d  00000000  00000000  000019e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ecb  00000000  00000000  00004045  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000010fc  00000000  00000000  00004f10  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005b0  00000000  00000000  0000600c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000094b  00000000  00000000  000065bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000017ba  00000000  00000000  00006f07  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000220  00000000  00000000  000086c1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 0d 03 	jmp	0x61a	; 0x61a <__vector_16>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	ec e0       	ldi	r30, 0x0C	; 12
     17e:	f6 e1       	ldi	r31, 0x16	; 22
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	ac 33       	cpi	r26, 0x3C	; 60
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	22 e0       	ldi	r18, 0x02	; 2
     18e:	ac e3       	ldi	r26, 0x3C	; 60
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a0 34       	cpi	r26, 0x40	; 64
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 d6 01 	call	0x3ac	; 0x3ac <main>
     1a0:	0c 94 04 0b 	jmp	0x1608	; 0x1608 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <LCD_write_PCF8574>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1a8:	cf 93       	push	r28
     1aa:	c8 2f       	mov	r28, r24
     1ac:	8e e4       	ldi	r24, 0x4E	; 78
     1ae:	0e 94 0f 04 	call	0x81e	; 0x81e <i2c_start_wait>
     1b2:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <__data_end>
     1b6:	8c 2b       	or	r24, r28
     1b8:	0e 94 40 04 	call	0x880	; 0x880 <i2c_write>
     1bc:	0e 94 37 04 	call	0x86e	; 0x86e <i2c_stop>
     1c0:	cf 91       	pop	r28
     1c2:	08 95       	ret

000001c4 <LCD_pulse_enable_neg>:
     1c4:	cf 93       	push	r28
     1c6:	c8 2f       	mov	r28, r24
     1c8:	84 60       	ori	r24, 0x04	; 4
     1ca:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCD_write_PCF8574>
     1ce:	85 e0       	ldi	r24, 0x05	; 5
     1d0:	8a 95       	dec	r24
     1d2:	f1 f7       	brne	.-4      	; 0x1d0 <LCD_pulse_enable_neg+0xc>
     1d4:	00 00       	nop
     1d6:	8c 2f       	mov	r24, r28
     1d8:	8b 7f       	andi	r24, 0xFB	; 251
     1da:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCD_write_PCF8574>
     1de:	87 ec       	ldi	r24, 0xC7	; 199
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	01 97       	sbiw	r24, 0x01	; 1
     1e4:	f1 f7       	brne	.-4      	; 0x1e2 <LCD_pulse_enable_neg+0x1e>
     1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <LCD_pulse_enable_neg+0x24>
     1e8:	00 00       	nop
     1ea:	cf 91       	pop	r28
     1ec:	08 95       	ret

000001ee <LCD_write4bits>:
     1ee:	cf 93       	push	r28
     1f0:	c8 2f       	mov	r28, r24
     1f2:	cd 7f       	andi	r28, 0xFD	; 253
     1f4:	8c 2f       	mov	r24, r28
     1f6:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCD_write_PCF8574>
     1fa:	8c 2f       	mov	r24, r28
     1fc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <LCD_pulse_enable_neg>
     200:	cf 91       	pop	r28
     202:	08 95       	ret

00000204 <LCD_send>:
     204:	cf 93       	push	r28
     206:	df 93       	push	r29
     208:	d8 2f       	mov	r29, r24
     20a:	c6 2f       	mov	r28, r22
     20c:	c4 60       	ori	r28, 0x04	; 4
     20e:	80 7f       	andi	r24, 0xF0	; 240
     210:	8c 2b       	or	r24, r28
     212:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_write4bits>
     216:	8d 2f       	mov	r24, r29
     218:	82 95       	swap	r24
     21a:	80 7f       	andi	r24, 0xF0	; 240
     21c:	8c 2b       	or	r24, r28
     21e:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_write4bits>
     222:	df 91       	pop	r29
     224:	cf 91       	pop	r28
     226:	08 95       	ret

00000228 <LCD_write_char>:
     228:	61 e0       	ldi	r22, 0x01	; 1
     22a:	0e 94 02 01 	call	0x204	; 0x204 <LCD_send>
     22e:	08 95       	ret

00000230 <putchr>:
     230:	0e 94 14 01 	call	0x228	; 0x228 <LCD_write_char>
     234:	80 e0       	ldi	r24, 0x00	; 0
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	08 95       	ret

0000023a <LCD_clear>:
     23a:	60 e0       	ldi	r22, 0x00	; 0
     23c:	81 e0       	ldi	r24, 0x01	; 1
     23e:	0e 94 02 01 	call	0x204	; 0x204 <LCD_send>
     242:	2f ef       	ldi	r18, 0xFF	; 255
     244:	86 e7       	ldi	r24, 0x76	; 118
     246:	91 e0       	ldi	r25, 0x01	; 1
     248:	21 50       	subi	r18, 0x01	; 1
     24a:	80 40       	sbci	r24, 0x00	; 0
     24c:	90 40       	sbci	r25, 0x00	; 0
     24e:	e1 f7       	brne	.-8      	; 0x248 <LCD_clear+0xe>
     250:	00 c0       	rjmp	.+0      	; 0x252 <LCD_clear+0x18>
     252:	00 00       	nop
     254:	08 95       	ret

00000256 <LCD_set_cursor>:
	_delay_us(30000);  // this command takes a long time!
	#endif
}

void LCD_set_cursor(unsigned char col, unsigned char row)
{
     256:	cf 93       	push	r28
     258:	df 93       	push	r29
     25a:	cd b7       	in	r28, 0x3d	; 61
     25c:	de b7       	in	r29, 0x3e	; 62
     25e:	28 97       	sbiw	r28, 0x08	; 8
     260:	0f b6       	in	r0, 0x3f	; 63
     262:	f8 94       	cli
     264:	de bf       	out	0x3e, r29	; 62
     266:	0f be       	out	0x3f, r0	; 63
     268:	cd bf       	out	0x3d, r28	; 61
	int row_offsets[] = { LCD_LINE1, LCD_LINE2, LCD_LINE3, LCD_LINE4 };
     26a:	98 e0       	ldi	r25, 0x08	; 8
     26c:	ee e0       	ldi	r30, 0x0E	; 14
     26e:	f1 e0       	ldi	r31, 0x01	; 1
     270:	de 01       	movw	r26, r28
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	01 90       	ld	r0, Z+
     276:	0d 92       	st	X+, r0
     278:	9a 95       	dec	r25
     27a:	e1 f7       	brne	.-8      	; 0x274 <LCD_set_cursor+0x1e>
	if ( row >= _numlines ) {
     27c:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <_numlines>
     280:	69 17       	cp	r22, r25
     282:	10 f0       	brcs	.+4      	; 0x288 <LCD_set_cursor+0x32>
		row = _numlines-1;    // we count rows starting w/0
     284:	6f ef       	ldi	r22, 0xFF	; 255
     286:	69 0f       	add	r22, r25
	}

	LCD_command_write(LCD_DD_RAM_ADDRESS | (col + row_offsets[row]));
     288:	e6 2f       	mov	r30, r22
     28a:	f0 e0       	ldi	r31, 0x00	; 0
     28c:	ee 0f       	add	r30, r30
     28e:	ff 1f       	adc	r31, r31
     290:	ec 0f       	add	r30, r28
     292:	fd 1f       	adc	r31, r29


/*********** mid level commands, for sending data/cmds */

inline void LCD_command_write(unsigned char value) {
	LCD_send(value, Rs & ~Rs);
     294:	91 81       	ldd	r25, Z+1	; 0x01
     296:	89 0f       	add	r24, r25
     298:	60 e0       	ldi	r22, 0x00	; 0
     29a:	80 68       	ori	r24, 0x80	; 128
     29c:	0e 94 02 01 	call	0x204	; 0x204 <LCD_send>
	if ( row >= _numlines ) {
		row = _numlines-1;    // we count rows starting w/0
	}

	LCD_command_write(LCD_DD_RAM_ADDRESS | (col + row_offsets[row]));
}
     2a0:	28 96       	adiw	r28, 0x08	; 8
     2a2:	0f b6       	in	r0, 0x3f	; 63
     2a4:	f8 94       	cli
     2a6:	de bf       	out	0x3e, r29	; 62
     2a8:	0f be       	out	0x3f, r0	; 63
     2aa:	cd bf       	out	0x3d, r28	; 61
     2ac:	df 91       	pop	r29
     2ae:	cf 91       	pop	r28
     2b0:	08 95       	ret

000002b2 <LCD_display_off>:

// Turn the display on/off (quickly)
void LCD_display_off(void) {
	_displayfunction &= ~LCD_DISPLAY_ON;
     2b2:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <_displayfunction>
     2b6:	8b 7f       	andi	r24, 0xFB	; 251
     2b8:	80 93 3f 01 	sts	0x013F, r24	; 0x80013f <_displayfunction>


/*********** mid level commands, for sending data/cmds */

inline void LCD_command_write(unsigned char value) {
	LCD_send(value, Rs & ~Rs);
     2bc:	60 e0       	ldi	r22, 0x00	; 0
     2be:	88 60       	ori	r24, 0x08	; 8
     2c0:	0e 94 02 01 	call	0x204	; 0x204 <LCD_send>
     2c4:	08 95       	ret

000002c6 <LCD_display_on>:
	_displayfunction &= ~LCD_DISPLAY_ON;
	LCD_command_write(LCD_DISPLAY_ON_OFF | _displayfunction);
}

void LCD_display_on(void) {
	_displayfunction |= LCD_DISPLAY_ON;
     2c6:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <_displayfunction>
     2ca:	98 2f       	mov	r25, r24
     2cc:	94 60       	ori	r25, 0x04	; 4
     2ce:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <_displayfunction>


/*********** mid level commands, for sending data/cmds */

inline void LCD_command_write(unsigned char value) {
	LCD_send(value, Rs & ~Rs);
     2d2:	60 e0       	ldi	r22, 0x00	; 0
     2d4:	8c 60       	ori	r24, 0x0C	; 12
     2d6:	0e 94 02 01 	call	0x204	; 0x204 <LCD_send>
     2da:	08 95       	ret

000002dc <LCD_init>:

FILE mystdout = FDEV_SETUP_STREAM(putchr, NULL, _FDEV_SETUP_WRITE);

void LCD_init(void){
	
	stdout = &mystdout;
     2dc:	80 e0       	ldi	r24, 0x00	; 0
     2de:	91 e0       	ldi	r25, 0x01	; 1
     2e0:	90 93 3d 02 	sts	0x023D, r25	; 0x80023d <__iob+0x3>
     2e4:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <__iob+0x2>
	//_backlightval &= ~Bl; // Off at start up
	_backlightval |= Bl; // On at start up
     2e8:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <__data_end>
     2ec:	88 60       	ori	r24, 0x08	; 8
     2ee:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <__data_end>
	_numlines = LCD_MAX_ROWS;
     2f2:	84 e0       	ldi	r24, 0x04	; 4
     2f4:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <_numlines>
     2f8:	2f ef       	ldi	r18, 0xFF	; 255
     2fa:	80 e7       	ldi	r24, 0x70	; 112
     2fc:	92 e0       	ldi	r25, 0x02	; 2
     2fe:	21 50       	subi	r18, 0x01	; 1
     300:	80 40       	sbci	r24, 0x00	; 0
     302:	90 40       	sbci	r25, 0x00	; 0
     304:	e1 f7       	brne	.-8      	; 0x2fe <LCD_init+0x22>
     306:	00 c0       	rjmp	.+0      	; 0x308 <LCD_init+0x2c>
     308:	00 00       	nop
	// Ensure supply rails are up before config sequence
	_delay_us(50000);

	// Set all control and data lines low. D4 - D7, En (High=1), Rw (Low = 0 or Write), Rs (Control/Instruction) (Low = 0 or Control)
	//I2C_Write_Byte_Single_Reg(LCD_PCF8574_ADDR, LCD_INIT); // Backlight off (Bit 3 = 0)
	i2c_start_wait(LCD_PCF8574_ADDR + I2C_WRITE);
     30a:	8e e4       	ldi	r24, 0x4E	; 78
     30c:	0e 94 0f 04 	call	0x81e	; 0x81e <i2c_start_wait>
	i2c_write(LCD_INIT);
     310:	84 e0       	ldi	r24, 0x04	; 4
     312:	0e 94 40 04 	call	0x880	; 0x880 <i2c_write>
     316:	8f e8       	ldi	r24, 0x8F	; 143
     318:	91 e0       	ldi	r25, 0x01	; 1
     31a:	01 97       	sbiw	r24, 0x01	; 1
     31c:	f1 f7       	brne	.-4      	; 0x31a <LCD_init+0x3e>
     31e:	00 c0       	rjmp	.+0      	; 0x320 <LCD_init+0x44>
     320:	00 00       	nop
	_delay_us(100);

	// Sequence to put the LCD into 4 bit mode this is according to the hitachi HD44780 datasheet page 109

	// we start in 8bit mode
	LCD_write4bits(LCD_8BIT_INIT);
     322:	80 e3       	ldi	r24, 0x30	; 48
     324:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_write4bits>
     328:	8f e4       	ldi	r24, 0x4F	; 79
     32a:	96 e4       	ldi	r25, 0x46	; 70
     32c:	01 97       	sbiw	r24, 0x01	; 1
     32e:	f1 f7       	brne	.-4      	; 0x32c <LCD_init+0x50>
     330:	00 c0       	rjmp	.+0      	; 0x332 <LCD_init+0x56>
     332:	00 00       	nop
	_delay_us(4500);  // wait more than 4.1ms

	// second write
	LCD_write4bits(LCD_8BIT_INIT);
     334:	80 e3       	ldi	r24, 0x30	; 48
     336:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_write4bits>
     33a:	87 e5       	ldi	r24, 0x57	; 87
     33c:	92 e0       	ldi	r25, 0x02	; 2
     33e:	01 97       	sbiw	r24, 0x01	; 1
     340:	f1 f7       	brne	.-4      	; 0x33e <LCD_init+0x62>
     342:	00 c0       	rjmp	.+0      	; 0x344 <LCD_init+0x68>
     344:	00 00       	nop
	_delay_us(150); // wait > 100us

	// third write
	LCD_write4bits(LCD_8BIT_INIT);
     346:	80 e3       	ldi	r24, 0x30	; 48
     348:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_write4bits>
     34c:	87 e5       	ldi	r24, 0x57	; 87
     34e:	92 e0       	ldi	r25, 0x02	; 2
     350:	01 97       	sbiw	r24, 0x01	; 1
     352:	f1 f7       	brne	.-4      	; 0x350 <LCD_init+0x74>
     354:	00 c0       	rjmp	.+0      	; 0x356 <LCD_init+0x7a>
     356:	00 00       	nop
	_delay_us(150);

	// now set to 4-bit interface
	LCD_write4bits(LCD_4BIT_INIT);
     358:	80 e2       	ldi	r24, 0x20	; 32
     35a:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_write4bits>
     35e:	87 e5       	ldi	r24, 0x57	; 87
     360:	92 e0       	ldi	r25, 0x02	; 2
     362:	01 97       	sbiw	r24, 0x01	; 1
     364:	f1 f7       	brne	.-4      	; 0x362 <LCD_init+0x86>
     366:	00 c0       	rjmp	.+0      	; 0x368 <LCD_init+0x8c>
     368:	00 00       	nop


/*********** mid level commands, for sending data/cmds */

inline void LCD_command_write(unsigned char value) {
	LCD_send(value, Rs & ~Rs);
     36a:	60 e0       	ldi	r22, 0x00	; 0
     36c:	88 e2       	ldi	r24, 0x28	; 40
     36e:	0e 94 02 01 	call	0x204	; 0x204 <LCD_send>
	// set # lines, font size, etc.
	_functionset = LCD_INTF4BITS | LCD_TWO_LINES | LCD_FONT_5_7;
	LCD_command_write(LCD_FUNCTION_SET | _functionset);
	//DelayMicroseconds(150);

	_displayfunction = LCD_DISPLAY_OFF | LCD_CURSOR_OFF | LCD_BLINKING_OFF;
     372:	10 92 3f 01 	sts	0x013F, r1	; 0x80013f <_displayfunction>
	LCD_display_off();
     376:	0e 94 59 01 	call	0x2b2	; 0x2b2 <LCD_display_off>

	// turn the display on with no cursor or blinking default
	LCD_display_on();
     37a:	0e 94 63 01 	call	0x2c6	; 0x2c6 <LCD_display_on>

	// set the entry mode
	_entrymodeset = LCD_INCREMENT | LCD_SHIFT_OFF; // Initialize to default text direction (for roman languages)
     37e:	82 e0       	ldi	r24, 0x02	; 2
     380:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <_entrymodeset>


/*********** mid level commands, for sending data/cmds */

inline void LCD_command_write(unsigned char value) {
	LCD_send(value, Rs & ~Rs);
     384:	60 e0       	ldi	r22, 0x00	; 0
     386:	86 e0       	ldi	r24, 0x06	; 6
     388:	0e 94 02 01 	call	0x204	; 0x204 <LCD_send>
     38c:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <_displayfunction>
     390:	60 e0       	ldi	r22, 0x00	; 0
     392:	88 60       	ori	r24, 0x08	; 8
     394:	0e 94 02 01 	call	0x204	; 0x204 <LCD_send>
	// Display Function set
	// _displayfunction = LCD_DISPLAY_ON | LCD_CURSOR_OFF | LCD_BLINKING_OFF;
	LCD_command_write(LCD_DISPLAY_ON_OFF | _displayfunction);

	// Display Control set
	_displaycontrol = LCD_DISPLAY_SHIFT | LCD_SHIFT_LEFT;
     398:	88 e0       	ldi	r24, 0x08	; 8
     39a:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <_displaycontrol>


/*********** mid level commands, for sending data/cmds */

inline void LCD_command_write(unsigned char value) {
	LCD_send(value, Rs & ~Rs);
     39e:	60 e0       	ldi	r22, 0x00	; 0
     3a0:	88 e1       	ldi	r24, 0x18	; 24
     3a2:	0e 94 02 01 	call	0x204	; 0x204 <LCD_send>
	// Display Control set
	_displaycontrol = LCD_DISPLAY_SHIFT | LCD_SHIFT_LEFT;
	LCD_command_write(LCD_MV_CUR_SHIFT_DISPLAY | _displaycontrol);

	// clear display and return cursor to home position. (Address 0)
	LCD_clear();
     3a6:	0e 94 1d 01 	call	0x23a	; 0x23a <LCD_clear>
     3aa:	08 95       	ret

000003ac <main>:

int steps_minute[120];


int main(void)
{
     3ac:	cf 93       	push	r28
     3ae:	df 93       	push	r29
     3b0:	cd b7       	in	r28, 0x3d	; 61
     3b2:	de b7       	in	r29, 0x3e	; 62
     3b4:	2e 97       	sbiw	r28, 0x0e	; 14
     3b6:	0f b6       	in	r0, 0x3f	; 63
     3b8:	f8 94       	cli
     3ba:	de bf       	out	0x3e, r29	; 62
     3bc:	0f be       	out	0x3f, r0	; 63
     3be:	cd bf       	out	0x3d, r28	; 61
	initialse();	
     3c0:	0e 94 c3 03 	call	0x786	; 0x786 <initialse>
	LCD_init();
     3c4:	0e 94 6e 01 	call	0x2dc	; 0x2dc <LCD_init>
	uart_init();
     3c8:	0e 94 78 04 	call	0x8f0	; 0x8f0 <uart_init>
	//io_redirect();
	int x_raw, y_raw, z_raw;
	float x_g, y_g, z_g;
	LCD_set_cursor(0,0);
     3cc:	60 e0       	ldi	r22, 0x00	; 0
     3ce:	80 e0       	ldi	r24, 0x00	; 0
     3d0:	0e 94 2b 01 	call	0x256	; 0x256 <LCD_set_cursor>
	printf("HELLO");
     3d4:	86 e1       	ldi	r24, 0x16	; 22
     3d6:	91 e0       	ldi	r25, 0x01	; 1
     3d8:	9f 93       	push	r25
     3da:	8f 93       	push	r24
     3dc:	0e 94 90 0a 	call	0x1520	; 0x1520 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3e0:	2f ef       	ldi	r18, 0xFF	; 255
     3e2:	87 ea       	ldi	r24, 0xA7	; 167
     3e4:	91 e6       	ldi	r25, 0x61	; 97
     3e6:	21 50       	subi	r18, 0x01	; 1
     3e8:	80 40       	sbci	r24, 0x00	; 0
     3ea:	90 40       	sbci	r25, 0x00	; 0
     3ec:	e1 f7       	brne	.-8      	; 0x3e6 <main+0x3a>
     3ee:	00 c0       	rjmp	.+0      	; 0x3f0 <main+0x44>
     3f0:	00 00       	nop
	_delay_ms(2000);
	int step_start = 0, current_steps = 0, current_min = 0;
	unsigned long measurement_timer = 0, minutetimer = 0;
	float max = 1, min = 1;
	write_str("hello_test",9);
     3f2:	69 e0       	ldi	r22, 0x09	; 9
     3f4:	8c e1       	ldi	r24, 0x1C	; 28
     3f6:	91 e0       	ldi	r25, 0x01	; 1
     3f8:	0e 94 ca 03 	call	0x794	; 0x794 <write_str>
     3fc:	0f 90       	pop	r0
     3fe:	0f 90       	pop	r0
	LCD_set_cursor(0,0);
	printf("HELLO");
	_delay_ms(2000);
	int step_start = 0, current_steps = 0, current_min = 0;
	unsigned long measurement_timer = 0, minutetimer = 0;
	float max = 1, min = 1;
     400:	1b 86       	std	Y+11, r1	; 0x0b
     402:	1c 86       	std	Y+12, r1	; 0x0c
     404:	e0 e8       	ldi	r30, 0x80	; 128
     406:	ed 87       	std	Y+13, r30	; 0x0d
     408:	ff e3       	ldi	r31, 0x3F	; 63
     40a:	fe 87       	std	Y+14, r31	; 0x0e
     40c:	21 2c       	mov	r2, r1
     40e:	31 2c       	mov	r3, r1
     410:	20 e8       	ldi	r18, 0x80	; 128
     412:	29 87       	std	Y+9, r18	; 0x09
     414:	8f e3       	ldi	r24, 0x3F	; 63
     416:	8a 87       	std	Y+10, r24	; 0x0a
	float x_g, y_g, z_g;
	LCD_set_cursor(0,0);
	printf("HELLO");
	_delay_ms(2000);
	int step_start = 0, current_steps = 0, current_min = 0;
	unsigned long measurement_timer = 0, minutetimer = 0;
     418:	81 2c       	mov	r8, r1
     41a:	91 2c       	mov	r9, r1
     41c:	54 01       	movw	r10, r8
     41e:	41 2c       	mov	r4, r1
     420:	51 2c       	mov	r5, r1
     422:	32 01       	movw	r6, r4
	int x_raw, y_raw, z_raw;
	float x_g, y_g, z_g;
	LCD_set_cursor(0,0);
	printf("HELLO");
	_delay_ms(2000);
	int step_start = 0, current_steps = 0, current_min = 0;
     424:	c1 2c       	mov	r12, r1
     426:	d1 2c       	mov	r13, r1
     428:	18 86       	std	Y+8, r1	; 0x08
     42a:	1f 82       	std	Y+7, r1	; 0x07
	unsigned long measurement_timer = 0, minutetimer = 0;
	float max = 1, min = 1;
	write_str("hello_test",9);
    while (1) 
    {
		if(measurement_timer+10 < millis())
     42c:	0e 94 64 03 	call	0x6c8	; 0x6c8 <millis>
     430:	93 01       	movw	r18, r6
     432:	82 01       	movw	r16, r4
     434:	06 5f       	subi	r16, 0xF6	; 246
     436:	1f 4f       	sbci	r17, 0xFF	; 255
     438:	2f 4f       	sbci	r18, 0xFF	; 255
     43a:	3f 4f       	sbci	r19, 0xFF	; 255
     43c:	06 17       	cp	r16, r22
     43e:	17 07       	cpc	r17, r23
     440:	28 07       	cpc	r18, r24
     442:	39 07       	cpc	r19, r25
     444:	08 f0       	brcs	.+2      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
     446:	b0 c0       	rjmp	.+352    	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
		{
			measurement_timer = millis();
     448:	0e 94 64 03 	call	0x6c8	; 0x6c8 <millis>
     44c:	2b 01       	movw	r4, r22
     44e:	3c 01       	movw	r6, r24
			get_data_accel(&x_raw,&y_raw,&z_raw);
     450:	ae 01       	movw	r20, r28
     452:	4b 5f       	subi	r20, 0xFB	; 251
     454:	5f 4f       	sbci	r21, 0xFF	; 255
     456:	be 01       	movw	r22, r28
     458:	6d 5f       	subi	r22, 0xFD	; 253
     45a:	7f 4f       	sbci	r23, 0xFF	; 255
     45c:	ce 01       	movw	r24, r28
     45e:	01 96       	adiw	r24, 0x01	; 1
     460:	0e 94 6f 03 	call	0x6de	; 0x6de <get_data_accel>
			if ((float)x_raw/4096 > max) max = (float)x_raw/4096;
     464:	69 81       	ldd	r22, Y+1	; 0x01
     466:	7a 81       	ldd	r23, Y+2	; 0x02
     468:	07 2e       	mov	r0, r23
     46a:	00 0c       	add	r0, r0
     46c:	88 0b       	sbc	r24, r24
     46e:	99 0b       	sbc	r25, r25
     470:	0e 94 90 04 	call	0x920	; 0x920 <__floatsisf>
     474:	20 e0       	ldi	r18, 0x00	; 0
     476:	30 e0       	ldi	r19, 0x00	; 0
     478:	40 e8       	ldi	r20, 0x80	; 128
     47a:	59 e3       	ldi	r21, 0x39	; 57
     47c:	0e 94 45 05 	call	0xa8a	; 0xa8a <__mulsf3>
     480:	f6 2e       	mov	r15, r22
     482:	e7 2e       	mov	r14, r23
     484:	18 2f       	mov	r17, r24
     486:	09 2f       	mov	r16, r25
     488:	26 2f       	mov	r18, r22
     48a:	37 2f       	mov	r19, r23
     48c:	48 2f       	mov	r20, r24
     48e:	59 2f       	mov	r21, r25
     490:	f9 85       	ldd	r31, Y+9	; 0x09
     492:	ea 85       	ldd	r30, Y+10	; 0x0a
     494:	62 2d       	mov	r22, r2
     496:	73 2d       	mov	r23, r3
     498:	8f 2f       	mov	r24, r31
     49a:	9e 2f       	mov	r25, r30
     49c:	0e 94 89 04 	call	0x912	; 0x912 <__cmpsf2>
     4a0:	88 23       	and	r24, r24
     4a2:	24 f4       	brge	.+8      	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
     4a4:	2f 2c       	mov	r2, r15
     4a6:	3e 2c       	mov	r3, r14
     4a8:	19 87       	std	Y+9, r17	; 0x09
     4aa:	0a 87       	std	Y+10, r16	; 0x0a
			if ((float)x_raw/4096 < min) min = (float)x_raw/4096;
     4ac:	2f 2d       	mov	r18, r15
     4ae:	3e 2d       	mov	r19, r14
     4b0:	41 2f       	mov	r20, r17
     4b2:	50 2f       	mov	r21, r16
     4b4:	bb 85       	ldd	r27, Y+11	; 0x0b
     4b6:	ac 85       	ldd	r26, Y+12	; 0x0c
     4b8:	fd 85       	ldd	r31, Y+13	; 0x0d
     4ba:	ee 85       	ldd	r30, Y+14	; 0x0e
     4bc:	6b 2f       	mov	r22, r27
     4be:	7a 2f       	mov	r23, r26
     4c0:	8f 2f       	mov	r24, r31
     4c2:	9e 2f       	mov	r25, r30
     4c4:	0e 94 40 05 	call	0xa80	; 0xa80 <__gesf2>
     4c8:	18 16       	cp	r1, r24
     4ca:	24 f4       	brge	.+8      	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
     4cc:	fb 86       	std	Y+11, r15	; 0x0b
     4ce:	ec 86       	std	Y+12, r14	; 0x0c
     4d0:	1d 87       	std	Y+13, r17	; 0x0d
     4d2:	0e 87       	std	Y+14, r16	; 0x0e
			LCD_set_cursor(0,4);
     4d4:	64 e0       	ldi	r22, 0x04	; 4
     4d6:	80 e0       	ldi	r24, 0x00	; 0
     4d8:	0e 94 2b 01 	call	0x256	; 0x256 <LCD_set_cursor>
			printf("%0.2f   %0.2f",max, min);
     4dc:	9e 85       	ldd	r25, Y+14	; 0x0e
     4de:	9f 93       	push	r25
     4e0:	ed 85       	ldd	r30, Y+13	; 0x0d
     4e2:	ef 93       	push	r30
     4e4:	fc 85       	ldd	r31, Y+12	; 0x0c
     4e6:	ff 93       	push	r31
     4e8:	2b 85       	ldd	r18, Y+11	; 0x0b
     4ea:	2f 93       	push	r18
     4ec:	8a 85       	ldd	r24, Y+10	; 0x0a
     4ee:	8f 93       	push	r24
     4f0:	99 85       	ldd	r25, Y+9	; 0x09
     4f2:	9f 93       	push	r25
     4f4:	3f 92       	push	r3
     4f6:	2f 92       	push	r2
     4f8:	e7 e2       	ldi	r30, 0x27	; 39
     4fa:	f1 e0       	ldi	r31, 0x01	; 1
     4fc:	ff 93       	push	r31
     4fe:	ef 93       	push	r30
     500:	0e 94 90 0a 	call	0x1520	; 0x1520 <printf>
			if(!step_start)
     504:	0f b6       	in	r0, 0x3f	; 63
     506:	f8 94       	cli
     508:	de bf       	out	0x3e, r29	; 62
     50a:	0f be       	out	0x3f, r0	; 63
     50c:	cd bf       	out	0x3d, r28	; 61
     50e:	ef 81       	ldd	r30, Y+7	; 0x07
     510:	f8 85       	ldd	r31, Y+8	; 0x08
     512:	ef 2b       	or	r30, r31
     514:	e1 f4       	brne	.+56     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
			{
				if((float)x_raw/4096 > 1.5) step_start = 1;
     516:	69 81       	ldd	r22, Y+1	; 0x01
     518:	7a 81       	ldd	r23, Y+2	; 0x02
     51a:	07 2e       	mov	r0, r23
     51c:	00 0c       	add	r0, r0
     51e:	88 0b       	sbc	r24, r24
     520:	99 0b       	sbc	r25, r25
     522:	0e 94 90 04 	call	0x920	; 0x920 <__floatsisf>
     526:	20 e0       	ldi	r18, 0x00	; 0
     528:	30 e0       	ldi	r19, 0x00	; 0
     52a:	40 e8       	ldi	r20, 0x80	; 128
     52c:	59 e3       	ldi	r21, 0x39	; 57
     52e:	0e 94 45 05 	call	0xa8a	; 0xa8a <__mulsf3>
     532:	01 e0       	ldi	r16, 0x01	; 1
     534:	10 e0       	ldi	r17, 0x00	; 0
     536:	20 e0       	ldi	r18, 0x00	; 0
     538:	30 e0       	ldi	r19, 0x00	; 0
     53a:	40 ec       	ldi	r20, 0xC0	; 192
     53c:	5f e3       	ldi	r21, 0x3F	; 63
     53e:	0e 94 40 05 	call	0xa80	; 0xa80 <__gesf2>
     542:	18 16       	cp	r1, r24
     544:	0c f0       	brlt	.+2      	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
     546:	00 e0       	ldi	r16, 0x00	; 0
     548:	0f 83       	std	Y+7, r16	; 0x07
     54a:	18 87       	std	Y+8, r17	; 0x08
     54c:	2d c0       	rjmp	.+90     	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
			}
			else
			{
				if((float)x_raw/4096 < 0.5)
     54e:	69 81       	ldd	r22, Y+1	; 0x01
     550:	7a 81       	ldd	r23, Y+2	; 0x02
     552:	07 2e       	mov	r0, r23
     554:	00 0c       	add	r0, r0
     556:	88 0b       	sbc	r24, r24
     558:	99 0b       	sbc	r25, r25
     55a:	0e 94 90 04 	call	0x920	; 0x920 <__floatsisf>
     55e:	20 e0       	ldi	r18, 0x00	; 0
     560:	30 e0       	ldi	r19, 0x00	; 0
     562:	40 e8       	ldi	r20, 0x80	; 128
     564:	59 e3       	ldi	r21, 0x39	; 57
     566:	0e 94 45 05 	call	0xa8a	; 0xa8a <__mulsf3>
     56a:	20 e0       	ldi	r18, 0x00	; 0
     56c:	30 e0       	ldi	r19, 0x00	; 0
     56e:	40 e0       	ldi	r20, 0x00	; 0
     570:	5f e3       	ldi	r21, 0x3F	; 63
     572:	0e 94 89 04 	call	0x912	; 0x912 <__cmpsf2>
     576:	88 23       	and	r24, r24
     578:	bc f4       	brge	.+46     	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
				{
					step_start = 0;
					current_steps++;
     57a:	ff ef       	ldi	r31, 0xFF	; 255
     57c:	cf 1a       	sub	r12, r31
     57e:	df 0a       	sbc	r13, r31
					LCD_clear();
     580:	0e 94 1d 01 	call	0x23a	; 0x23a <LCD_clear>
					LCD_set_cursor(0,0);
     584:	60 e0       	ldi	r22, 0x00	; 0
     586:	80 e0       	ldi	r24, 0x00	; 0
     588:	0e 94 2b 01 	call	0x256	; 0x256 <LCD_set_cursor>
					printf("%d",current_steps);
     58c:	df 92       	push	r13
     58e:	cf 92       	push	r12
     590:	85 e3       	ldi	r24, 0x35	; 53
     592:	91 e0       	ldi	r25, 0x01	; 1
     594:	9f 93       	push	r25
     596:	8f 93       	push	r24
     598:	0e 94 90 0a 	call	0x1520	; 0x1520 <printf>
     59c:	0f 90       	pop	r0
     59e:	0f 90       	pop	r0
     5a0:	0f 90       	pop	r0
     5a2:	0f 90       	pop	r0
			}
			else
			{
				if((float)x_raw/4096 < 0.5)
				{
					step_start = 0;
     5a4:	1f 82       	std	Y+7, r1	; 0x07
     5a6:	18 86       	std	Y+8, r1	; 0x08
				}
			}
			
		}
		
		if(minutetimer+60000 < millis())
     5a8:	0e 94 64 03 	call	0x6c8	; 0x6c8 <millis>
     5ac:	95 01       	movw	r18, r10
     5ae:	84 01       	movw	r16, r8
     5b0:	00 5a       	subi	r16, 0xA0	; 160
     5b2:	15 41       	sbci	r17, 0x15	; 21
     5b4:	2f 4f       	sbci	r18, 0xFF	; 255
     5b6:	3f 4f       	sbci	r19, 0xFF	; 255
     5b8:	06 17       	cp	r16, r22
     5ba:	17 07       	cpc	r17, r23
     5bc:	28 07       	cpc	r18, r24
     5be:	39 07       	cpc	r19, r25
     5c0:	08 f0       	brcs	.+2      	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
     5c2:	34 cf       	rjmp	.-408    	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
		{
			minutetimer = millis();
     5c4:	0e 94 64 03 	call	0x6c8	; 0x6c8 <millis>
     5c8:	4b 01       	movw	r8, r22
     5ca:	5c 01       	movw	r10, r24
			steps_minute[current_min] = current_steps;
     5cc:	ea e4       	ldi	r30, 0x4A	; 74
     5ce:	f1 e0       	ldi	r31, 0x01	; 1
     5d0:	d1 82       	std	Z+1, r13	; 0x01
     5d2:	c0 82       	st	Z, r12
			current_steps = 0;
     5d4:	c1 2c       	mov	r12, r1
     5d6:	d1 2c       	mov	r13, r1
     5d8:	29 cf       	rjmp	.-430    	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>

000005da <register_setup>:
	i2c_write(reg);
	i2c_start(device + I2C_READ);
	char data = i2c_readNak();
	i2c_stop();
	return data;
}
     5da:	f8 94       	cli
     5dc:	85 b5       	in	r24, 0x25	; 37
     5de:	83 60       	ori	r24, 0x03	; 3
     5e0:	85 bd       	out	0x25, r24	; 37
     5e2:	ee e6       	ldi	r30, 0x6E	; 110
     5e4:	f0 e0       	ldi	r31, 0x00	; 0
     5e6:	80 81       	ld	r24, Z
     5e8:	81 60       	ori	r24, 0x01	; 1
     5ea:	80 83       	st	Z, r24
     5ec:	87 e8       	ldi	r24, 0x87	; 135
     5ee:	8a b9       	out	0x0a, r24	; 10
     5f0:	90 ef       	ldi	r25, 0xF0	; 240
     5f2:	97 b9       	out	0x07, r25	; 7
     5f4:	94 b9       	out	0x04, r25	; 4
     5f6:	15 b8       	out	0x05, r1	; 5
     5f8:	90 e3       	ldi	r25, 0x30	; 48
     5fa:	98 b9       	out	0x08, r25	; 8
     5fc:	1b b8       	out	0x0b, r1	; 11
     5fe:	90 e4       	ldi	r25, 0x40	; 64
     600:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
     604:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     608:	1f ba       	out	0x1f, r1	; 31
     60a:	e9 e6       	ldi	r30, 0x69	; 105
     60c:	f0 e0       	ldi	r31, 0x00	; 0
     60e:	80 81       	ld	r24, Z
     610:	8c 60       	ori	r24, 0x0C	; 12
     612:	80 83       	st	Z, r24
     614:	e9 9a       	sbi	0x1d, 1	; 29
     616:	78 94       	sei
     618:	08 95       	ret

0000061a <__vector_16>:
     61a:	1f 92       	push	r1
     61c:	0f 92       	push	r0
     61e:	0f b6       	in	r0, 0x3f	; 63
     620:	0f 92       	push	r0
     622:	11 24       	eor	r1, r1
     624:	8f 93       	push	r24
     626:	9f 93       	push	r25
     628:	af 93       	push	r26
     62a:	bf 93       	push	r27
     62c:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <timer0_millis>
     630:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <timer0_millis+0x1>
     634:	a0 91 44 01 	lds	r26, 0x0144	; 0x800144 <timer0_millis+0x2>
     638:	b0 91 45 01 	lds	r27, 0x0145	; 0x800145 <timer0_millis+0x3>
     63c:	01 96       	adiw	r24, 0x01	; 1
     63e:	a1 1d       	adc	r26, r1
     640:	b1 1d       	adc	r27, r1
     642:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <timer0_millis>
     646:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <timer0_millis+0x1>
     64a:	a0 93 44 01 	sts	0x0144, r26	; 0x800144 <timer0_millis+0x2>
     64e:	b0 93 45 01 	sts	0x0145, r27	; 0x800145 <timer0_millis+0x3>
     652:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <timer0_fract>
     656:	93 e0       	ldi	r25, 0x03	; 3
     658:	98 0f       	add	r25, r24
     65a:	9d 37       	cpi	r25, 0x7D	; 125
     65c:	18 f4       	brcc	.+6      	; 0x664 <__vector_16+0x4a>
     65e:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timer0_fract>
     662:	16 c0       	rjmp	.+44     	; 0x690 <__vector_16+0x76>
     664:	8a 57       	subi	r24, 0x7A	; 122
     666:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <timer0_fract>
     66a:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <timer0_millis>
     66e:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <timer0_millis+0x1>
     672:	a0 91 44 01 	lds	r26, 0x0144	; 0x800144 <timer0_millis+0x2>
     676:	b0 91 45 01 	lds	r27, 0x0145	; 0x800145 <timer0_millis+0x3>
     67a:	01 96       	adiw	r24, 0x01	; 1
     67c:	a1 1d       	adc	r26, r1
     67e:	b1 1d       	adc	r27, r1
     680:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <timer0_millis>
     684:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <timer0_millis+0x1>
     688:	a0 93 44 01 	sts	0x0144, r26	; 0x800144 <timer0_millis+0x2>
     68c:	b0 93 45 01 	sts	0x0145, r27	; 0x800145 <timer0_millis+0x3>
     690:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <timer0_overflow_count>
     694:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <timer0_overflow_count+0x1>
     698:	a0 91 48 01 	lds	r26, 0x0148	; 0x800148 <timer0_overflow_count+0x2>
     69c:	b0 91 49 01 	lds	r27, 0x0149	; 0x800149 <timer0_overflow_count+0x3>
     6a0:	01 96       	adiw	r24, 0x01	; 1
     6a2:	a1 1d       	adc	r26, r1
     6a4:	b1 1d       	adc	r27, r1
     6a6:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <timer0_overflow_count>
     6aa:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <timer0_overflow_count+0x1>
     6ae:	a0 93 48 01 	sts	0x0148, r26	; 0x800148 <timer0_overflow_count+0x2>
     6b2:	b0 93 49 01 	sts	0x0149, r27	; 0x800149 <timer0_overflow_count+0x3>
     6b6:	bf 91       	pop	r27
     6b8:	af 91       	pop	r26
     6ba:	9f 91       	pop	r25
     6bc:	8f 91       	pop	r24
     6be:	0f 90       	pop	r0
     6c0:	0f be       	out	0x3f, r0	; 63
     6c2:	0f 90       	pop	r0
     6c4:	1f 90       	pop	r1
     6c6:	18 95       	reti

000006c8 <millis>:
     6c8:	f8 94       	cli
     6ca:	60 91 42 01 	lds	r22, 0x0142	; 0x800142 <timer0_millis>
     6ce:	70 91 43 01 	lds	r23, 0x0143	; 0x800143 <timer0_millis+0x1>
     6d2:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <timer0_millis+0x2>
     6d6:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <timer0_millis+0x3>
     6da:	78 94       	sei
     6dc:	08 95       	ret

000006de <get_data_accel>:
     6de:	ef 92       	push	r14
     6e0:	ff 92       	push	r15
     6e2:	0f 93       	push	r16
     6e4:	1f 93       	push	r17
     6e6:	cf 93       	push	r28
     6e8:	df 93       	push	r29
     6ea:	7c 01       	movw	r14, r24
     6ec:	8b 01       	movw	r16, r22
     6ee:	ea 01       	movw	r28, r20
     6f0:	88 e3       	ldi	r24, 0x38	; 56
     6f2:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <i2c_start>
     6f6:	81 e0       	ldi	r24, 0x01	; 1
     6f8:	0e 94 40 04 	call	0x880	; 0x880 <i2c_write>
     6fc:	89 e3       	ldi	r24, 0x39	; 57
     6fe:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <i2c_start>
     702:	0e 94 52 04 	call	0x8a4	; 0x8a4 <i2c_readAck>
     706:	f7 01       	movw	r30, r14
     708:	10 82       	st	Z, r1
     70a:	81 83       	std	Z+1, r24	; 0x01
     70c:	0e 94 52 04 	call	0x8a4	; 0x8a4 <i2c_readAck>
     710:	f8 01       	movw	r30, r16
     712:	10 82       	st	Z, r1
     714:	81 83       	std	Z+1, r24	; 0x01
     716:	0e 94 5d 04 	call	0x8ba	; 0x8ba <i2c_readNak>
     71a:	18 82       	st	Y, r1
     71c:	89 83       	std	Y+1, r24	; 0x01
     71e:	0e 94 37 04 	call	0x86e	; 0x86e <i2c_stop>
     722:	df 91       	pop	r29
     724:	cf 91       	pop	r28
     726:	1f 91       	pop	r17
     728:	0f 91       	pop	r16
     72a:	ff 90       	pop	r15
     72c:	ef 90       	pop	r14
     72e:	08 95       	ret

00000730 <i2c_write_reg>:
     730:	cf 93       	push	r28
     732:	df 93       	push	r29
     734:	d6 2f       	mov	r29, r22
     736:	c4 2f       	mov	r28, r20
     738:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <i2c_start>
     73c:	8d 2f       	mov	r24, r29
     73e:	0e 94 40 04 	call	0x880	; 0x880 <i2c_write>
     742:	8c 2f       	mov	r24, r28
     744:	0e 94 40 04 	call	0x880	; 0x880 <i2c_write>
     748:	0e 94 37 04 	call	0x86e	; 0x86e <i2c_stop>
     74c:	df 91       	pop	r29
     74e:	cf 91       	pop	r28
     750:	08 95       	ret

00000752 <MMA8451_init>:
     752:	42 e0       	ldi	r20, 0x02	; 2
     754:	6a e2       	ldi	r22, 0x2A	; 42
     756:	88 e3       	ldi	r24, 0x38	; 56
     758:	0e 94 98 03 	call	0x730	; 0x730 <i2c_write_reg>
     75c:	42 e0       	ldi	r20, 0x02	; 2
     75e:	6b e2       	ldi	r22, 0x2B	; 43
     760:	88 e3       	ldi	r24, 0x38	; 56
     762:	0e 94 98 03 	call	0x730	; 0x730 <i2c_write_reg>
     766:	42 e0       	ldi	r20, 0x02	; 2
     768:	6e e0       	ldi	r22, 0x0E	; 14
     76a:	88 e3       	ldi	r24, 0x38	; 56
     76c:	0e 94 98 03 	call	0x730	; 0x730 <i2c_write_reg>
     770:	40 e0       	ldi	r20, 0x00	; 0
     772:	69 e0       	ldi	r22, 0x09	; 9
     774:	88 e3       	ldi	r24, 0x38	; 56
     776:	0e 94 98 03 	call	0x730	; 0x730 <i2c_write_reg>
     77a:	43 e0       	ldi	r20, 0x03	; 3
     77c:	6a e2       	ldi	r22, 0x2A	; 42
     77e:	88 e3       	ldi	r24, 0x38	; 56
     780:	0e 94 98 03 	call	0x730	; 0x730 <i2c_write_reg>
     784:	08 95       	ret

00000786 <initialse>:
     786:	0e 94 ed 02 	call	0x5da	; 0x5da <register_setup>
     78a:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <i2c_init>
     78e:	0e 94 a9 03 	call	0x752	; 0x752 <MMA8451_init>
     792:	08 95       	ret

00000794 <write_str>:

void write_str(char str[], char length)
{
     794:	0f 93       	push	r16
     796:	1f 93       	push	r17
     798:	cf 93       	push	r28
     79a:	df 93       	push	r29
	for(int x = 0; x<length;x++) uart_putchar(str[x], "tab");
     79c:	66 23       	and	r22, r22
     79e:	69 f0       	breq	.+26     	; 0x7ba <write_str+0x26>
     7a0:	8c 01       	movw	r16, r24
     7a2:	ec 01       	movw	r28, r24
     7a4:	06 0f       	add	r16, r22
     7a6:	11 1d       	adc	r17, r1
     7a8:	89 91       	ld	r24, Y+
     7aa:	68 e3       	ldi	r22, 0x38	; 56
     7ac:	71 e0       	ldi	r23, 0x01	; 1
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	0e 94 68 04 	call	0x8d0	; 0x8d0 <uart_putchar>
     7b4:	c0 17       	cp	r28, r16
     7b6:	d1 07       	cpc	r29, r17
     7b8:	b9 f7       	brne	.-18     	; 0x7a8 <write_str+0x14>
     7ba:	df 91       	pop	r29
     7bc:	cf 91       	pop	r28
     7be:	1f 91       	pop	r17
     7c0:	0f 91       	pop	r16
     7c2:	08 95       	ret

000007c4 <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
     7c4:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     7c8:	88 e4       	ldi	r24, 0x48	; 72
     7ca:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
     7ce:	08 95       	ret

000007d0 <i2c_start>:
     7d0:	94 ea       	ldi	r25, 0xA4	; 164
     7d2:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     7d6:	ec eb       	ldi	r30, 0xBC	; 188
     7d8:	f0 e0       	ldi	r31, 0x00	; 0
     7da:	90 81       	ld	r25, Z
     7dc:	99 23       	and	r25, r25
     7de:	ec f7       	brge	.-6      	; 0x7da <i2c_start+0xa>
     7e0:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     7e4:	98 7f       	andi	r25, 0xF8	; 248
     7e6:	98 30       	cpi	r25, 0x08	; 8
     7e8:	11 f0       	breq	.+4      	; 0x7ee <i2c_start+0x1e>
     7ea:	90 31       	cpi	r25, 0x10	; 16
     7ec:	a1 f4       	brne	.+40     	; 0x816 <i2c_start+0x46>
     7ee:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
     7f2:	84 e8       	ldi	r24, 0x84	; 132
     7f4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     7f8:	ec eb       	ldi	r30, 0xBC	; 188
     7fa:	f0 e0       	ldi	r31, 0x00	; 0
     7fc:	80 81       	ld	r24, Z
     7fe:	88 23       	and	r24, r24
     800:	ec f7       	brge	.-6      	; 0x7fc <i2c_start+0x2c>
     802:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     806:	98 7f       	andi	r25, 0xF8	; 248
     808:	98 31       	cpi	r25, 0x18	; 24
     80a:	39 f0       	breq	.+14     	; 0x81a <i2c_start+0x4a>
     80c:	81 e0       	ldi	r24, 0x01	; 1
     80e:	90 34       	cpi	r25, 0x40	; 64
     810:	29 f4       	brne	.+10     	; 0x81c <i2c_start+0x4c>
     812:	80 e0       	ldi	r24, 0x00	; 0
     814:	08 95       	ret
     816:	81 e0       	ldi	r24, 0x01	; 1
     818:	08 95       	ret
     81a:	80 e0       	ldi	r24, 0x00	; 0
     81c:	08 95       	ret

0000081e <i2c_start_wait>:
     81e:	cf 93       	push	r28
     820:	df 93       	push	r29
     822:	ec eb       	ldi	r30, 0xBC	; 188
     824:	f0 e0       	ldi	r31, 0x00	; 0
     826:	24 ea       	ldi	r18, 0xA4	; 164
     828:	a9 eb       	ldi	r26, 0xB9	; 185
     82a:	b0 e0       	ldi	r27, 0x00	; 0
     82c:	cb eb       	ldi	r28, 0xBB	; 187
     82e:	d0 e0       	ldi	r29, 0x00	; 0
     830:	34 e8       	ldi	r19, 0x84	; 132
     832:	44 e9       	ldi	r20, 0x94	; 148
     834:	20 83       	st	Z, r18
     836:	90 81       	ld	r25, Z
     838:	99 23       	and	r25, r25
     83a:	ec f7       	brge	.-6      	; 0x836 <i2c_start_wait+0x18>
     83c:	9c 91       	ld	r25, X
     83e:	98 7f       	andi	r25, 0xF8	; 248
     840:	98 30       	cpi	r25, 0x08	; 8
     842:	11 f0       	breq	.+4      	; 0x848 <i2c_start_wait+0x2a>
     844:	90 31       	cpi	r25, 0x10	; 16
     846:	b1 f7       	brne	.-20     	; 0x834 <i2c_start_wait+0x16>
     848:	88 83       	st	Y, r24
     84a:	30 83       	st	Z, r19
     84c:	90 81       	ld	r25, Z
     84e:	99 23       	and	r25, r25
     850:	ec f7       	brge	.-6      	; 0x84c <i2c_start_wait+0x2e>
     852:	9c 91       	ld	r25, X
     854:	98 7f       	andi	r25, 0xF8	; 248
     856:	90 32       	cpi	r25, 0x20	; 32
     858:	11 f0       	breq	.+4      	; 0x85e <i2c_start_wait+0x40>
     85a:	98 35       	cpi	r25, 0x58	; 88
     85c:	29 f4       	brne	.+10     	; 0x868 <i2c_start_wait+0x4a>
     85e:	40 83       	st	Z, r20
     860:	90 81       	ld	r25, Z
     862:	94 fd       	sbrc	r25, 4
     864:	fd cf       	rjmp	.-6      	; 0x860 <i2c_start_wait+0x42>
     866:	e6 cf       	rjmp	.-52     	; 0x834 <i2c_start_wait+0x16>
     868:	df 91       	pop	r29
     86a:	cf 91       	pop	r28
     86c:	08 95       	ret

0000086e <i2c_stop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     86e:	84 e9       	ldi	r24, 0x94	; 148
     870:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
     874:	ec eb       	ldi	r30, 0xBC	; 188
     876:	f0 e0       	ldi	r31, 0x00	; 0
     878:	80 81       	ld	r24, Z
     87a:	84 fd       	sbrc	r24, 4
     87c:	fd cf       	rjmp	.-6      	; 0x878 <i2c_stop+0xa>

}/* i2c_stop */
     87e:	08 95       	ret

00000880 <i2c_write>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     880:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1<<TWINT) | (1<<TWEN);
     884:	84 e8       	ldi	r24, 0x84	; 132
     886:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     88a:	ec eb       	ldi	r30, 0xBC	; 188
     88c:	f0 e0       	ldi	r31, 0x00	; 0
     88e:	80 81       	ld	r24, Z
     890:	88 23       	and	r24, r24
     892:	ec f7       	brge	.-6      	; 0x88e <i2c_write+0xe>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     894:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     898:	98 7f       	andi	r25, 0xF8	; 248
     89a:	81 e0       	ldi	r24, 0x01	; 1
     89c:	98 32       	cpi	r25, 0x28	; 40
     89e:	09 f4       	brne	.+2      	; 0x8a2 <i2c_write+0x22>
     8a0:	80 e0       	ldi	r24, 0x00	; 0
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
     8a2:	08 95       	ret

000008a4 <i2c_readAck>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     8a4:	84 ec       	ldi	r24, 0xC4	; 196
     8a6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while(!(TWCR & (1<<TWINT)));    
     8aa:	ec eb       	ldi	r30, 0xBC	; 188
     8ac:	f0 e0       	ldi	r31, 0x00	; 0
     8ae:	80 81       	ld	r24, Z
     8b0:	88 23       	and	r24, r24
     8b2:	ec f7       	brge	.-6      	; 0x8ae <i2c_readAck+0xa>

    return TWDR;
     8b4:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>

}/* i2c_readAck */
     8b8:	08 95       	ret

000008ba <i2c_readNak>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     8ba:	84 e8       	ldi	r24, 0x84	; 132
     8bc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while(!(TWCR & (1<<TWINT)));
     8c0:	ec eb       	ldi	r30, 0xBC	; 188
     8c2:	f0 e0       	ldi	r31, 0x00	; 0
     8c4:	80 81       	ld	r24, Z
     8c6:	88 23       	and	r24, r24
     8c8:	ec f7       	brge	.-6      	; 0x8c4 <i2c_readNak+0xa>
	
    return TWDR;
     8ca:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>

}/* i2c_readNak */
     8ce:	08 95       	ret

000008d0 <uart_putchar>:
}

char uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
	return UDR0;
     8d0:	cf 93       	push	r28
     8d2:	c8 2f       	mov	r28, r24
     8d4:	8a 30       	cpi	r24, 0x0A	; 10
     8d6:	19 f4       	brne	.+6      	; 0x8de <uart_putchar+0xe>
     8d8:	8d e0       	ldi	r24, 0x0D	; 13
     8da:	0e 94 68 04 	call	0x8d0	; 0x8d0 <uart_putchar>
     8de:	e0 ec       	ldi	r30, 0xC0	; 192
     8e0:	f0 e0       	ldi	r31, 0x00	; 0
     8e2:	80 81       	ld	r24, Z
     8e4:	85 ff       	sbrs	r24, 5
     8e6:	fd cf       	rjmp	.-6      	; 0x8e2 <uart_putchar+0x12>
     8e8:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     8ec:	cf 91       	pop	r28
     8ee:	08 95       	ret

000008f0 <uart_init>:
FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);


void uart_init(void) {
	
	UBRR0H = UBRRH_VALUE;
     8f0:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L = UBRRL_VALUE;
     8f4:	87 e6       	ldi	r24, 0x67	; 103
     8f6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	
	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
     8fa:	e0 ec       	ldi	r30, 0xC0	; 192
     8fc:	f0 e0       	ldi	r31, 0x00	; 0
     8fe:	80 81       	ld	r24, Z
     900:	8d 7f       	andi	r24, 0xFD	; 253
     902:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
     904:	86 e0       	ldi	r24, 0x06	; 6
     906:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
     90a:	88 e1       	ldi	r24, 0x18	; 24
     90c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     910:	08 95       	ret

00000912 <__cmpsf2>:
     912:	0e 94 cb 04 	call	0x996	; 0x996 <__fp_cmp>
     916:	08 f4       	brcc	.+2      	; 0x91a <__cmpsf2+0x8>
     918:	81 e0       	ldi	r24, 0x01	; 1
     91a:	08 95       	ret

0000091c <__floatunsisf>:
     91c:	e8 94       	clt
     91e:	09 c0       	rjmp	.+18     	; 0x932 <__floatsisf+0x12>

00000920 <__floatsisf>:
     920:	97 fb       	bst	r25, 7
     922:	3e f4       	brtc	.+14     	; 0x932 <__floatsisf+0x12>
     924:	90 95       	com	r25
     926:	80 95       	com	r24
     928:	70 95       	com	r23
     92a:	61 95       	neg	r22
     92c:	7f 4f       	sbci	r23, 0xFF	; 255
     92e:	8f 4f       	sbci	r24, 0xFF	; 255
     930:	9f 4f       	sbci	r25, 0xFF	; 255
     932:	99 23       	and	r25, r25
     934:	a9 f0       	breq	.+42     	; 0x960 <__floatsisf+0x40>
     936:	f9 2f       	mov	r31, r25
     938:	96 e9       	ldi	r25, 0x96	; 150
     93a:	bb 27       	eor	r27, r27
     93c:	93 95       	inc	r25
     93e:	f6 95       	lsr	r31
     940:	87 95       	ror	r24
     942:	77 95       	ror	r23
     944:	67 95       	ror	r22
     946:	b7 95       	ror	r27
     948:	f1 11       	cpse	r31, r1
     94a:	f8 cf       	rjmp	.-16     	; 0x93c <__floatsisf+0x1c>
     94c:	fa f4       	brpl	.+62     	; 0x98c <__floatsisf+0x6c>
     94e:	bb 0f       	add	r27, r27
     950:	11 f4       	brne	.+4      	; 0x956 <__floatsisf+0x36>
     952:	60 ff       	sbrs	r22, 0
     954:	1b c0       	rjmp	.+54     	; 0x98c <__floatsisf+0x6c>
     956:	6f 5f       	subi	r22, 0xFF	; 255
     958:	7f 4f       	sbci	r23, 0xFF	; 255
     95a:	8f 4f       	sbci	r24, 0xFF	; 255
     95c:	9f 4f       	sbci	r25, 0xFF	; 255
     95e:	16 c0       	rjmp	.+44     	; 0x98c <__floatsisf+0x6c>
     960:	88 23       	and	r24, r24
     962:	11 f0       	breq	.+4      	; 0x968 <__floatsisf+0x48>
     964:	96 e9       	ldi	r25, 0x96	; 150
     966:	11 c0       	rjmp	.+34     	; 0x98a <__floatsisf+0x6a>
     968:	77 23       	and	r23, r23
     96a:	21 f0       	breq	.+8      	; 0x974 <__floatsisf+0x54>
     96c:	9e e8       	ldi	r25, 0x8E	; 142
     96e:	87 2f       	mov	r24, r23
     970:	76 2f       	mov	r23, r22
     972:	05 c0       	rjmp	.+10     	; 0x97e <__floatsisf+0x5e>
     974:	66 23       	and	r22, r22
     976:	71 f0       	breq	.+28     	; 0x994 <__floatsisf+0x74>
     978:	96 e8       	ldi	r25, 0x86	; 134
     97a:	86 2f       	mov	r24, r22
     97c:	70 e0       	ldi	r23, 0x00	; 0
     97e:	60 e0       	ldi	r22, 0x00	; 0
     980:	2a f0       	brmi	.+10     	; 0x98c <__floatsisf+0x6c>
     982:	9a 95       	dec	r25
     984:	66 0f       	add	r22, r22
     986:	77 1f       	adc	r23, r23
     988:	88 1f       	adc	r24, r24
     98a:	da f7       	brpl	.-10     	; 0x982 <__floatsisf+0x62>
     98c:	88 0f       	add	r24, r24
     98e:	96 95       	lsr	r25
     990:	87 95       	ror	r24
     992:	97 f9       	bld	r25, 7
     994:	08 95       	ret

00000996 <__fp_cmp>:
     996:	99 0f       	add	r25, r25
     998:	00 08       	sbc	r0, r0
     99a:	55 0f       	add	r21, r21
     99c:	aa 0b       	sbc	r26, r26
     99e:	e0 e8       	ldi	r30, 0x80	; 128
     9a0:	fe ef       	ldi	r31, 0xFE	; 254
     9a2:	16 16       	cp	r1, r22
     9a4:	17 06       	cpc	r1, r23
     9a6:	e8 07       	cpc	r30, r24
     9a8:	f9 07       	cpc	r31, r25
     9aa:	c0 f0       	brcs	.+48     	; 0x9dc <__fp_cmp+0x46>
     9ac:	12 16       	cp	r1, r18
     9ae:	13 06       	cpc	r1, r19
     9b0:	e4 07       	cpc	r30, r20
     9b2:	f5 07       	cpc	r31, r21
     9b4:	98 f0       	brcs	.+38     	; 0x9dc <__fp_cmp+0x46>
     9b6:	62 1b       	sub	r22, r18
     9b8:	73 0b       	sbc	r23, r19
     9ba:	84 0b       	sbc	r24, r20
     9bc:	95 0b       	sbc	r25, r21
     9be:	39 f4       	brne	.+14     	; 0x9ce <__fp_cmp+0x38>
     9c0:	0a 26       	eor	r0, r26
     9c2:	61 f0       	breq	.+24     	; 0x9dc <__fp_cmp+0x46>
     9c4:	23 2b       	or	r18, r19
     9c6:	24 2b       	or	r18, r20
     9c8:	25 2b       	or	r18, r21
     9ca:	21 f4       	brne	.+8      	; 0x9d4 <__fp_cmp+0x3e>
     9cc:	08 95       	ret
     9ce:	0a 26       	eor	r0, r26
     9d0:	09 f4       	brne	.+2      	; 0x9d4 <__fp_cmp+0x3e>
     9d2:	a1 40       	sbci	r26, 0x01	; 1
     9d4:	a6 95       	lsr	r26
     9d6:	8f ef       	ldi	r24, 0xFF	; 255
     9d8:	81 1d       	adc	r24, r1
     9da:	81 1d       	adc	r24, r1
     9dc:	08 95       	ret

000009de <__fp_inf>:
     9de:	97 f9       	bld	r25, 7
     9e0:	9f 67       	ori	r25, 0x7F	; 127
     9e2:	80 e8       	ldi	r24, 0x80	; 128
     9e4:	70 e0       	ldi	r23, 0x00	; 0
     9e6:	60 e0       	ldi	r22, 0x00	; 0
     9e8:	08 95       	ret

000009ea <__fp_nan>:
     9ea:	9f ef       	ldi	r25, 0xFF	; 255
     9ec:	80 ec       	ldi	r24, 0xC0	; 192
     9ee:	08 95       	ret

000009f0 <__fp_pscA>:
     9f0:	00 24       	eor	r0, r0
     9f2:	0a 94       	dec	r0
     9f4:	16 16       	cp	r1, r22
     9f6:	17 06       	cpc	r1, r23
     9f8:	18 06       	cpc	r1, r24
     9fa:	09 06       	cpc	r0, r25
     9fc:	08 95       	ret

000009fe <__fp_pscB>:
     9fe:	00 24       	eor	r0, r0
     a00:	0a 94       	dec	r0
     a02:	12 16       	cp	r1, r18
     a04:	13 06       	cpc	r1, r19
     a06:	14 06       	cpc	r1, r20
     a08:	05 06       	cpc	r0, r21
     a0a:	08 95       	ret

00000a0c <__fp_round>:
     a0c:	09 2e       	mov	r0, r25
     a0e:	03 94       	inc	r0
     a10:	00 0c       	add	r0, r0
     a12:	11 f4       	brne	.+4      	; 0xa18 <__fp_round+0xc>
     a14:	88 23       	and	r24, r24
     a16:	52 f0       	brmi	.+20     	; 0xa2c <__fp_round+0x20>
     a18:	bb 0f       	add	r27, r27
     a1a:	40 f4       	brcc	.+16     	; 0xa2c <__fp_round+0x20>
     a1c:	bf 2b       	or	r27, r31
     a1e:	11 f4       	brne	.+4      	; 0xa24 <__fp_round+0x18>
     a20:	60 ff       	sbrs	r22, 0
     a22:	04 c0       	rjmp	.+8      	; 0xa2c <__fp_round+0x20>
     a24:	6f 5f       	subi	r22, 0xFF	; 255
     a26:	7f 4f       	sbci	r23, 0xFF	; 255
     a28:	8f 4f       	sbci	r24, 0xFF	; 255
     a2a:	9f 4f       	sbci	r25, 0xFF	; 255
     a2c:	08 95       	ret

00000a2e <__fp_split3>:
     a2e:	57 fd       	sbrc	r21, 7
     a30:	90 58       	subi	r25, 0x80	; 128
     a32:	44 0f       	add	r20, r20
     a34:	55 1f       	adc	r21, r21
     a36:	59 f0       	breq	.+22     	; 0xa4e <__fp_splitA+0x10>
     a38:	5f 3f       	cpi	r21, 0xFF	; 255
     a3a:	71 f0       	breq	.+28     	; 0xa58 <__fp_splitA+0x1a>
     a3c:	47 95       	ror	r20

00000a3e <__fp_splitA>:
     a3e:	88 0f       	add	r24, r24
     a40:	97 fb       	bst	r25, 7
     a42:	99 1f       	adc	r25, r25
     a44:	61 f0       	breq	.+24     	; 0xa5e <__fp_splitA+0x20>
     a46:	9f 3f       	cpi	r25, 0xFF	; 255
     a48:	79 f0       	breq	.+30     	; 0xa68 <__fp_splitA+0x2a>
     a4a:	87 95       	ror	r24
     a4c:	08 95       	ret
     a4e:	12 16       	cp	r1, r18
     a50:	13 06       	cpc	r1, r19
     a52:	14 06       	cpc	r1, r20
     a54:	55 1f       	adc	r21, r21
     a56:	f2 cf       	rjmp	.-28     	; 0xa3c <__fp_split3+0xe>
     a58:	46 95       	lsr	r20
     a5a:	f1 df       	rcall	.-30     	; 0xa3e <__fp_splitA>
     a5c:	08 c0       	rjmp	.+16     	; 0xa6e <__fp_splitA+0x30>
     a5e:	16 16       	cp	r1, r22
     a60:	17 06       	cpc	r1, r23
     a62:	18 06       	cpc	r1, r24
     a64:	99 1f       	adc	r25, r25
     a66:	f1 cf       	rjmp	.-30     	; 0xa4a <__fp_splitA+0xc>
     a68:	86 95       	lsr	r24
     a6a:	71 05       	cpc	r23, r1
     a6c:	61 05       	cpc	r22, r1
     a6e:	08 94       	sec
     a70:	08 95       	ret

00000a72 <__fp_zero>:
     a72:	e8 94       	clt

00000a74 <__fp_szero>:
     a74:	bb 27       	eor	r27, r27
     a76:	66 27       	eor	r22, r22
     a78:	77 27       	eor	r23, r23
     a7a:	cb 01       	movw	r24, r22
     a7c:	97 f9       	bld	r25, 7
     a7e:	08 95       	ret

00000a80 <__gesf2>:
     a80:	0e 94 cb 04 	call	0x996	; 0x996 <__fp_cmp>
     a84:	08 f4       	brcc	.+2      	; 0xa88 <__gesf2+0x8>
     a86:	8f ef       	ldi	r24, 0xFF	; 255
     a88:	08 95       	ret

00000a8a <__mulsf3>:
     a8a:	0e 94 58 05 	call	0xab0	; 0xab0 <__mulsf3x>
     a8e:	0c 94 06 05 	jmp	0xa0c	; 0xa0c <__fp_round>
     a92:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <__fp_pscA>
     a96:	38 f0       	brcs	.+14     	; 0xaa6 <__mulsf3+0x1c>
     a98:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__fp_pscB>
     a9c:	20 f0       	brcs	.+8      	; 0xaa6 <__mulsf3+0x1c>
     a9e:	95 23       	and	r25, r21
     aa0:	11 f0       	breq	.+4      	; 0xaa6 <__mulsf3+0x1c>
     aa2:	0c 94 ef 04 	jmp	0x9de	; 0x9de <__fp_inf>
     aa6:	0c 94 f5 04 	jmp	0x9ea	; 0x9ea <__fp_nan>
     aaa:	11 24       	eor	r1, r1
     aac:	0c 94 3a 05 	jmp	0xa74	; 0xa74 <__fp_szero>

00000ab0 <__mulsf3x>:
     ab0:	0e 94 17 05 	call	0xa2e	; 0xa2e <__fp_split3>
     ab4:	70 f3       	brcs	.-36     	; 0xa92 <__mulsf3+0x8>

00000ab6 <__mulsf3_pse>:
     ab6:	95 9f       	mul	r25, r21
     ab8:	c1 f3       	breq	.-16     	; 0xaaa <__mulsf3+0x20>
     aba:	95 0f       	add	r25, r21
     abc:	50 e0       	ldi	r21, 0x00	; 0
     abe:	55 1f       	adc	r21, r21
     ac0:	62 9f       	mul	r22, r18
     ac2:	f0 01       	movw	r30, r0
     ac4:	72 9f       	mul	r23, r18
     ac6:	bb 27       	eor	r27, r27
     ac8:	f0 0d       	add	r31, r0
     aca:	b1 1d       	adc	r27, r1
     acc:	63 9f       	mul	r22, r19
     ace:	aa 27       	eor	r26, r26
     ad0:	f0 0d       	add	r31, r0
     ad2:	b1 1d       	adc	r27, r1
     ad4:	aa 1f       	adc	r26, r26
     ad6:	64 9f       	mul	r22, r20
     ad8:	66 27       	eor	r22, r22
     ada:	b0 0d       	add	r27, r0
     adc:	a1 1d       	adc	r26, r1
     ade:	66 1f       	adc	r22, r22
     ae0:	82 9f       	mul	r24, r18
     ae2:	22 27       	eor	r18, r18
     ae4:	b0 0d       	add	r27, r0
     ae6:	a1 1d       	adc	r26, r1
     ae8:	62 1f       	adc	r22, r18
     aea:	73 9f       	mul	r23, r19
     aec:	b0 0d       	add	r27, r0
     aee:	a1 1d       	adc	r26, r1
     af0:	62 1f       	adc	r22, r18
     af2:	83 9f       	mul	r24, r19
     af4:	a0 0d       	add	r26, r0
     af6:	61 1d       	adc	r22, r1
     af8:	22 1f       	adc	r18, r18
     afa:	74 9f       	mul	r23, r20
     afc:	33 27       	eor	r19, r19
     afe:	a0 0d       	add	r26, r0
     b00:	61 1d       	adc	r22, r1
     b02:	23 1f       	adc	r18, r19
     b04:	84 9f       	mul	r24, r20
     b06:	60 0d       	add	r22, r0
     b08:	21 1d       	adc	r18, r1
     b0a:	82 2f       	mov	r24, r18
     b0c:	76 2f       	mov	r23, r22
     b0e:	6a 2f       	mov	r22, r26
     b10:	11 24       	eor	r1, r1
     b12:	9f 57       	subi	r25, 0x7F	; 127
     b14:	50 40       	sbci	r21, 0x00	; 0
     b16:	9a f0       	brmi	.+38     	; 0xb3e <__mulsf3_pse+0x88>
     b18:	f1 f0       	breq	.+60     	; 0xb56 <__mulsf3_pse+0xa0>
     b1a:	88 23       	and	r24, r24
     b1c:	4a f0       	brmi	.+18     	; 0xb30 <__mulsf3_pse+0x7a>
     b1e:	ee 0f       	add	r30, r30
     b20:	ff 1f       	adc	r31, r31
     b22:	bb 1f       	adc	r27, r27
     b24:	66 1f       	adc	r22, r22
     b26:	77 1f       	adc	r23, r23
     b28:	88 1f       	adc	r24, r24
     b2a:	91 50       	subi	r25, 0x01	; 1
     b2c:	50 40       	sbci	r21, 0x00	; 0
     b2e:	a9 f7       	brne	.-22     	; 0xb1a <__mulsf3_pse+0x64>
     b30:	9e 3f       	cpi	r25, 0xFE	; 254
     b32:	51 05       	cpc	r21, r1
     b34:	80 f0       	brcs	.+32     	; 0xb56 <__mulsf3_pse+0xa0>
     b36:	0c 94 ef 04 	jmp	0x9de	; 0x9de <__fp_inf>
     b3a:	0c 94 3a 05 	jmp	0xa74	; 0xa74 <__fp_szero>
     b3e:	5f 3f       	cpi	r21, 0xFF	; 255
     b40:	e4 f3       	brlt	.-8      	; 0xb3a <__mulsf3_pse+0x84>
     b42:	98 3e       	cpi	r25, 0xE8	; 232
     b44:	d4 f3       	brlt	.-12     	; 0xb3a <__mulsf3_pse+0x84>
     b46:	86 95       	lsr	r24
     b48:	77 95       	ror	r23
     b4a:	67 95       	ror	r22
     b4c:	b7 95       	ror	r27
     b4e:	f7 95       	ror	r31
     b50:	e7 95       	ror	r30
     b52:	9f 5f       	subi	r25, 0xFF	; 255
     b54:	c1 f7       	brne	.-16     	; 0xb46 <__mulsf3_pse+0x90>
     b56:	fe 2b       	or	r31, r30
     b58:	88 0f       	add	r24, r24
     b5a:	91 1d       	adc	r25, r1
     b5c:	96 95       	lsr	r25
     b5e:	87 95       	ror	r24
     b60:	97 f9       	bld	r25, 7
     b62:	08 95       	ret

00000b64 <vfprintf>:
     b64:	a0 e1       	ldi	r26, 0x10	; 16
     b66:	b0 e0       	ldi	r27, 0x00	; 0
     b68:	e8 eb       	ldi	r30, 0xB8	; 184
     b6a:	f5 e0       	ldi	r31, 0x05	; 5
     b6c:	0c 94 2f 09 	jmp	0x125e	; 0x125e <__prologue_saves__>
     b70:	7c 01       	movw	r14, r24
     b72:	1b 01       	movw	r2, r22
     b74:	6a 01       	movw	r12, r20
     b76:	fc 01       	movw	r30, r24
     b78:	17 82       	std	Z+7, r1	; 0x07
     b7a:	16 82       	std	Z+6, r1	; 0x06
     b7c:	83 81       	ldd	r24, Z+3	; 0x03
     b7e:	81 ff       	sbrs	r24, 1
     b80:	44 c3       	rjmp	.+1672   	; 0x120a <vfprintf+0x6a6>
     b82:	9e 01       	movw	r18, r28
     b84:	2f 5f       	subi	r18, 0xFF	; 255
     b86:	3f 4f       	sbci	r19, 0xFF	; 255
     b88:	39 01       	movw	r6, r18
     b8a:	f7 01       	movw	r30, r14
     b8c:	93 81       	ldd	r25, Z+3	; 0x03
     b8e:	f1 01       	movw	r30, r2
     b90:	93 fd       	sbrc	r25, 3
     b92:	85 91       	lpm	r24, Z+
     b94:	93 ff       	sbrs	r25, 3
     b96:	81 91       	ld	r24, Z+
     b98:	1f 01       	movw	r2, r30
     b9a:	88 23       	and	r24, r24
     b9c:	09 f4       	brne	.+2      	; 0xba0 <vfprintf+0x3c>
     b9e:	31 c3       	rjmp	.+1634   	; 0x1202 <vfprintf+0x69e>
     ba0:	85 32       	cpi	r24, 0x25	; 37
     ba2:	39 f4       	brne	.+14     	; 0xbb2 <vfprintf+0x4e>
     ba4:	93 fd       	sbrc	r25, 3
     ba6:	85 91       	lpm	r24, Z+
     ba8:	93 ff       	sbrs	r25, 3
     baa:	81 91       	ld	r24, Z+
     bac:	1f 01       	movw	r2, r30
     bae:	85 32       	cpi	r24, 0x25	; 37
     bb0:	39 f4       	brne	.+14     	; 0xbc0 <vfprintf+0x5c>
     bb2:	b7 01       	movw	r22, r14
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
     bba:	56 01       	movw	r10, r12
     bbc:	65 01       	movw	r12, r10
     bbe:	e5 cf       	rjmp	.-54     	; 0xb8a <vfprintf+0x26>
     bc0:	10 e0       	ldi	r17, 0x00	; 0
     bc2:	51 2c       	mov	r5, r1
     bc4:	91 2c       	mov	r9, r1
     bc6:	ff e1       	ldi	r31, 0x1F	; 31
     bc8:	f9 15       	cp	r31, r9
     bca:	d8 f0       	brcs	.+54     	; 0xc02 <vfprintf+0x9e>
     bcc:	8b 32       	cpi	r24, 0x2B	; 43
     bce:	79 f0       	breq	.+30     	; 0xbee <vfprintf+0x8a>
     bd0:	38 f4       	brcc	.+14     	; 0xbe0 <vfprintf+0x7c>
     bd2:	80 32       	cpi	r24, 0x20	; 32
     bd4:	79 f0       	breq	.+30     	; 0xbf4 <vfprintf+0x90>
     bd6:	83 32       	cpi	r24, 0x23	; 35
     bd8:	a1 f4       	brne	.+40     	; 0xc02 <vfprintf+0x9e>
     bda:	f9 2d       	mov	r31, r9
     bdc:	f0 61       	ori	r31, 0x10	; 16
     bde:	2e c0       	rjmp	.+92     	; 0xc3c <vfprintf+0xd8>
     be0:	8d 32       	cpi	r24, 0x2D	; 45
     be2:	61 f0       	breq	.+24     	; 0xbfc <vfprintf+0x98>
     be4:	80 33       	cpi	r24, 0x30	; 48
     be6:	69 f4       	brne	.+26     	; 0xc02 <vfprintf+0x9e>
     be8:	29 2d       	mov	r18, r9
     bea:	21 60       	ori	r18, 0x01	; 1
     bec:	2d c0       	rjmp	.+90     	; 0xc48 <vfprintf+0xe4>
     bee:	39 2d       	mov	r19, r9
     bf0:	32 60       	ori	r19, 0x02	; 2
     bf2:	93 2e       	mov	r9, r19
     bf4:	89 2d       	mov	r24, r9
     bf6:	84 60       	ori	r24, 0x04	; 4
     bf8:	98 2e       	mov	r9, r24
     bfa:	2a c0       	rjmp	.+84     	; 0xc50 <vfprintf+0xec>
     bfc:	e9 2d       	mov	r30, r9
     bfe:	e8 60       	ori	r30, 0x08	; 8
     c00:	15 c0       	rjmp	.+42     	; 0xc2c <vfprintf+0xc8>
     c02:	97 fc       	sbrc	r9, 7
     c04:	2d c0       	rjmp	.+90     	; 0xc60 <vfprintf+0xfc>
     c06:	20 ed       	ldi	r18, 0xD0	; 208
     c08:	28 0f       	add	r18, r24
     c0a:	2a 30       	cpi	r18, 0x0A	; 10
     c0c:	88 f4       	brcc	.+34     	; 0xc30 <vfprintf+0xcc>
     c0e:	96 fe       	sbrs	r9, 6
     c10:	06 c0       	rjmp	.+12     	; 0xc1e <vfprintf+0xba>
     c12:	3a e0       	ldi	r19, 0x0A	; 10
     c14:	13 9f       	mul	r17, r19
     c16:	20 0d       	add	r18, r0
     c18:	11 24       	eor	r1, r1
     c1a:	12 2f       	mov	r17, r18
     c1c:	19 c0       	rjmp	.+50     	; 0xc50 <vfprintf+0xec>
     c1e:	8a e0       	ldi	r24, 0x0A	; 10
     c20:	58 9e       	mul	r5, r24
     c22:	20 0d       	add	r18, r0
     c24:	11 24       	eor	r1, r1
     c26:	52 2e       	mov	r5, r18
     c28:	e9 2d       	mov	r30, r9
     c2a:	e0 62       	ori	r30, 0x20	; 32
     c2c:	9e 2e       	mov	r9, r30
     c2e:	10 c0       	rjmp	.+32     	; 0xc50 <vfprintf+0xec>
     c30:	8e 32       	cpi	r24, 0x2E	; 46
     c32:	31 f4       	brne	.+12     	; 0xc40 <vfprintf+0xdc>
     c34:	96 fc       	sbrc	r9, 6
     c36:	e5 c2       	rjmp	.+1482   	; 0x1202 <vfprintf+0x69e>
     c38:	f9 2d       	mov	r31, r9
     c3a:	f0 64       	ori	r31, 0x40	; 64
     c3c:	9f 2e       	mov	r9, r31
     c3e:	08 c0       	rjmp	.+16     	; 0xc50 <vfprintf+0xec>
     c40:	8c 36       	cpi	r24, 0x6C	; 108
     c42:	21 f4       	brne	.+8      	; 0xc4c <vfprintf+0xe8>
     c44:	29 2d       	mov	r18, r9
     c46:	20 68       	ori	r18, 0x80	; 128
     c48:	92 2e       	mov	r9, r18
     c4a:	02 c0       	rjmp	.+4      	; 0xc50 <vfprintf+0xec>
     c4c:	88 36       	cpi	r24, 0x68	; 104
     c4e:	41 f4       	brne	.+16     	; 0xc60 <vfprintf+0xfc>
     c50:	f1 01       	movw	r30, r2
     c52:	93 fd       	sbrc	r25, 3
     c54:	85 91       	lpm	r24, Z+
     c56:	93 ff       	sbrs	r25, 3
     c58:	81 91       	ld	r24, Z+
     c5a:	1f 01       	movw	r2, r30
     c5c:	81 11       	cpse	r24, r1
     c5e:	b3 cf       	rjmp	.-154    	; 0xbc6 <vfprintf+0x62>
     c60:	9b eb       	ldi	r25, 0xBB	; 187
     c62:	98 0f       	add	r25, r24
     c64:	93 30       	cpi	r25, 0x03	; 3
     c66:	20 f4       	brcc	.+8      	; 0xc70 <vfprintf+0x10c>
     c68:	99 2d       	mov	r25, r9
     c6a:	90 61       	ori	r25, 0x10	; 16
     c6c:	80 5e       	subi	r24, 0xE0	; 224
     c6e:	07 c0       	rjmp	.+14     	; 0xc7e <vfprintf+0x11a>
     c70:	9b e9       	ldi	r25, 0x9B	; 155
     c72:	98 0f       	add	r25, r24
     c74:	93 30       	cpi	r25, 0x03	; 3
     c76:	08 f0       	brcs	.+2      	; 0xc7a <vfprintf+0x116>
     c78:	66 c1       	rjmp	.+716    	; 0xf46 <vfprintf+0x3e2>
     c7a:	99 2d       	mov	r25, r9
     c7c:	9f 7e       	andi	r25, 0xEF	; 239
     c7e:	96 ff       	sbrs	r25, 6
     c80:	16 e0       	ldi	r17, 0x06	; 6
     c82:	9f 73       	andi	r25, 0x3F	; 63
     c84:	99 2e       	mov	r9, r25
     c86:	85 36       	cpi	r24, 0x65	; 101
     c88:	19 f4       	brne	.+6      	; 0xc90 <vfprintf+0x12c>
     c8a:	90 64       	ori	r25, 0x40	; 64
     c8c:	99 2e       	mov	r9, r25
     c8e:	08 c0       	rjmp	.+16     	; 0xca0 <vfprintf+0x13c>
     c90:	86 36       	cpi	r24, 0x66	; 102
     c92:	21 f4       	brne	.+8      	; 0xc9c <vfprintf+0x138>
     c94:	39 2f       	mov	r19, r25
     c96:	30 68       	ori	r19, 0x80	; 128
     c98:	93 2e       	mov	r9, r19
     c9a:	02 c0       	rjmp	.+4      	; 0xca0 <vfprintf+0x13c>
     c9c:	11 11       	cpse	r17, r1
     c9e:	11 50       	subi	r17, 0x01	; 1
     ca0:	97 fe       	sbrs	r9, 7
     ca2:	07 c0       	rjmp	.+14     	; 0xcb2 <vfprintf+0x14e>
     ca4:	1c 33       	cpi	r17, 0x3C	; 60
     ca6:	50 f4       	brcc	.+20     	; 0xcbc <vfprintf+0x158>
     ca8:	44 24       	eor	r4, r4
     caa:	43 94       	inc	r4
     cac:	41 0e       	add	r4, r17
     cae:	27 e0       	ldi	r18, 0x07	; 7
     cb0:	0b c0       	rjmp	.+22     	; 0xcc8 <vfprintf+0x164>
     cb2:	18 30       	cpi	r17, 0x08	; 8
     cb4:	38 f0       	brcs	.+14     	; 0xcc4 <vfprintf+0x160>
     cb6:	27 e0       	ldi	r18, 0x07	; 7
     cb8:	17 e0       	ldi	r17, 0x07	; 7
     cba:	05 c0       	rjmp	.+10     	; 0xcc6 <vfprintf+0x162>
     cbc:	27 e0       	ldi	r18, 0x07	; 7
     cbe:	9c e3       	ldi	r25, 0x3C	; 60
     cc0:	49 2e       	mov	r4, r25
     cc2:	02 c0       	rjmp	.+4      	; 0xcc8 <vfprintf+0x164>
     cc4:	21 2f       	mov	r18, r17
     cc6:	41 2c       	mov	r4, r1
     cc8:	56 01       	movw	r10, r12
     cca:	84 e0       	ldi	r24, 0x04	; 4
     ccc:	a8 0e       	add	r10, r24
     cce:	b1 1c       	adc	r11, r1
     cd0:	f6 01       	movw	r30, r12
     cd2:	60 81       	ld	r22, Z
     cd4:	71 81       	ldd	r23, Z+1	; 0x01
     cd6:	82 81       	ldd	r24, Z+2	; 0x02
     cd8:	93 81       	ldd	r25, Z+3	; 0x03
     cda:	04 2d       	mov	r16, r4
     cdc:	a3 01       	movw	r20, r6
     cde:	0e 94 66 09 	call	0x12cc	; 0x12cc <__ftoa_engine>
     ce2:	6c 01       	movw	r12, r24
     ce4:	f9 81       	ldd	r31, Y+1	; 0x01
     ce6:	fc 87       	std	Y+12, r31	; 0x0c
     ce8:	f0 ff       	sbrs	r31, 0
     cea:	02 c0       	rjmp	.+4      	; 0xcf0 <vfprintf+0x18c>
     cec:	f3 ff       	sbrs	r31, 3
     cee:	06 c0       	rjmp	.+12     	; 0xcfc <vfprintf+0x198>
     cf0:	91 fc       	sbrc	r9, 1
     cf2:	06 c0       	rjmp	.+12     	; 0xd00 <vfprintf+0x19c>
     cf4:	92 fe       	sbrs	r9, 2
     cf6:	06 c0       	rjmp	.+12     	; 0xd04 <vfprintf+0x1a0>
     cf8:	00 e2       	ldi	r16, 0x20	; 32
     cfa:	05 c0       	rjmp	.+10     	; 0xd06 <vfprintf+0x1a2>
     cfc:	0d e2       	ldi	r16, 0x2D	; 45
     cfe:	03 c0       	rjmp	.+6      	; 0xd06 <vfprintf+0x1a2>
     d00:	0b e2       	ldi	r16, 0x2B	; 43
     d02:	01 c0       	rjmp	.+2      	; 0xd06 <vfprintf+0x1a2>
     d04:	00 e0       	ldi	r16, 0x00	; 0
     d06:	8c 85       	ldd	r24, Y+12	; 0x0c
     d08:	8c 70       	andi	r24, 0x0C	; 12
     d0a:	19 f0       	breq	.+6      	; 0xd12 <vfprintf+0x1ae>
     d0c:	01 11       	cpse	r16, r1
     d0e:	5a c2       	rjmp	.+1204   	; 0x11c4 <vfprintf+0x660>
     d10:	9b c2       	rjmp	.+1334   	; 0x1248 <vfprintf+0x6e4>
     d12:	97 fe       	sbrs	r9, 7
     d14:	10 c0       	rjmp	.+32     	; 0xd36 <vfprintf+0x1d2>
     d16:	4c 0c       	add	r4, r12
     d18:	fc 85       	ldd	r31, Y+12	; 0x0c
     d1a:	f4 ff       	sbrs	r31, 4
     d1c:	04 c0       	rjmp	.+8      	; 0xd26 <vfprintf+0x1c2>
     d1e:	8a 81       	ldd	r24, Y+2	; 0x02
     d20:	81 33       	cpi	r24, 0x31	; 49
     d22:	09 f4       	brne	.+2      	; 0xd26 <vfprintf+0x1c2>
     d24:	4a 94       	dec	r4
     d26:	14 14       	cp	r1, r4
     d28:	74 f5       	brge	.+92     	; 0xd86 <vfprintf+0x222>
     d2a:	28 e0       	ldi	r18, 0x08	; 8
     d2c:	24 15       	cp	r18, r4
     d2e:	78 f5       	brcc	.+94     	; 0xd8e <vfprintf+0x22a>
     d30:	88 e0       	ldi	r24, 0x08	; 8
     d32:	48 2e       	mov	r4, r24
     d34:	2c c0       	rjmp	.+88     	; 0xd8e <vfprintf+0x22a>
     d36:	96 fc       	sbrc	r9, 6
     d38:	2a c0       	rjmp	.+84     	; 0xd8e <vfprintf+0x22a>
     d3a:	81 2f       	mov	r24, r17
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	8c 15       	cp	r24, r12
     d40:	9d 05       	cpc	r25, r13
     d42:	9c f0       	brlt	.+38     	; 0xd6a <vfprintf+0x206>
     d44:	3c ef       	ldi	r19, 0xFC	; 252
     d46:	c3 16       	cp	r12, r19
     d48:	3f ef       	ldi	r19, 0xFF	; 255
     d4a:	d3 06       	cpc	r13, r19
     d4c:	74 f0       	brlt	.+28     	; 0xd6a <vfprintf+0x206>
     d4e:	89 2d       	mov	r24, r9
     d50:	80 68       	ori	r24, 0x80	; 128
     d52:	98 2e       	mov	r9, r24
     d54:	0a c0       	rjmp	.+20     	; 0xd6a <vfprintf+0x206>
     d56:	e2 e0       	ldi	r30, 0x02	; 2
     d58:	f0 e0       	ldi	r31, 0x00	; 0
     d5a:	ec 0f       	add	r30, r28
     d5c:	fd 1f       	adc	r31, r29
     d5e:	e1 0f       	add	r30, r17
     d60:	f1 1d       	adc	r31, r1
     d62:	80 81       	ld	r24, Z
     d64:	80 33       	cpi	r24, 0x30	; 48
     d66:	19 f4       	brne	.+6      	; 0xd6e <vfprintf+0x20a>
     d68:	11 50       	subi	r17, 0x01	; 1
     d6a:	11 11       	cpse	r17, r1
     d6c:	f4 cf       	rjmp	.-24     	; 0xd56 <vfprintf+0x1f2>
     d6e:	97 fe       	sbrs	r9, 7
     d70:	0e c0       	rjmp	.+28     	; 0xd8e <vfprintf+0x22a>
     d72:	44 24       	eor	r4, r4
     d74:	43 94       	inc	r4
     d76:	41 0e       	add	r4, r17
     d78:	81 2f       	mov	r24, r17
     d7a:	90 e0       	ldi	r25, 0x00	; 0
     d7c:	c8 16       	cp	r12, r24
     d7e:	d9 06       	cpc	r13, r25
     d80:	2c f4       	brge	.+10     	; 0xd8c <vfprintf+0x228>
     d82:	1c 19       	sub	r17, r12
     d84:	04 c0       	rjmp	.+8      	; 0xd8e <vfprintf+0x22a>
     d86:	44 24       	eor	r4, r4
     d88:	43 94       	inc	r4
     d8a:	01 c0       	rjmp	.+2      	; 0xd8e <vfprintf+0x22a>
     d8c:	10 e0       	ldi	r17, 0x00	; 0
     d8e:	97 fe       	sbrs	r9, 7
     d90:	06 c0       	rjmp	.+12     	; 0xd9e <vfprintf+0x23a>
     d92:	1c 14       	cp	r1, r12
     d94:	1d 04       	cpc	r1, r13
     d96:	34 f4       	brge	.+12     	; 0xda4 <vfprintf+0x240>
     d98:	c6 01       	movw	r24, r12
     d9a:	01 96       	adiw	r24, 0x01	; 1
     d9c:	05 c0       	rjmp	.+10     	; 0xda8 <vfprintf+0x244>
     d9e:	85 e0       	ldi	r24, 0x05	; 5
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	02 c0       	rjmp	.+4      	; 0xda8 <vfprintf+0x244>
     da4:	81 e0       	ldi	r24, 0x01	; 1
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	01 11       	cpse	r16, r1
     daa:	01 96       	adiw	r24, 0x01	; 1
     dac:	11 23       	and	r17, r17
     dae:	31 f0       	breq	.+12     	; 0xdbc <vfprintf+0x258>
     db0:	21 2f       	mov	r18, r17
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	2f 5f       	subi	r18, 0xFF	; 255
     db6:	3f 4f       	sbci	r19, 0xFF	; 255
     db8:	82 0f       	add	r24, r18
     dba:	93 1f       	adc	r25, r19
     dbc:	25 2d       	mov	r18, r5
     dbe:	30 e0       	ldi	r19, 0x00	; 0
     dc0:	82 17       	cp	r24, r18
     dc2:	93 07       	cpc	r25, r19
     dc4:	14 f4       	brge	.+4      	; 0xdca <vfprintf+0x266>
     dc6:	58 1a       	sub	r5, r24
     dc8:	01 c0       	rjmp	.+2      	; 0xdcc <vfprintf+0x268>
     dca:	51 2c       	mov	r5, r1
     dcc:	89 2d       	mov	r24, r9
     dce:	89 70       	andi	r24, 0x09	; 9
     dd0:	49 f4       	brne	.+18     	; 0xde4 <vfprintf+0x280>
     dd2:	55 20       	and	r5, r5
     dd4:	39 f0       	breq	.+14     	; 0xde4 <vfprintf+0x280>
     dd6:	b7 01       	movw	r22, r14
     dd8:	80 e2       	ldi	r24, 0x20	; 32
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
     de0:	5a 94       	dec	r5
     de2:	f7 cf       	rjmp	.-18     	; 0xdd2 <vfprintf+0x26e>
     de4:	00 23       	and	r16, r16
     de6:	29 f0       	breq	.+10     	; 0xdf2 <vfprintf+0x28e>
     de8:	b7 01       	movw	r22, r14
     dea:	80 2f       	mov	r24, r16
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
     df2:	93 fc       	sbrc	r9, 3
     df4:	09 c0       	rjmp	.+18     	; 0xe08 <vfprintf+0x2a4>
     df6:	55 20       	and	r5, r5
     df8:	39 f0       	breq	.+14     	; 0xe08 <vfprintf+0x2a4>
     dfa:	b7 01       	movw	r22, r14
     dfc:	80 e3       	ldi	r24, 0x30	; 48
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
     e04:	5a 94       	dec	r5
     e06:	f7 cf       	rjmp	.-18     	; 0xdf6 <vfprintf+0x292>
     e08:	97 fe       	sbrs	r9, 7
     e0a:	4c c0       	rjmp	.+152    	; 0xea4 <vfprintf+0x340>
     e0c:	46 01       	movw	r8, r12
     e0e:	d7 fe       	sbrs	r13, 7
     e10:	02 c0       	rjmp	.+4      	; 0xe16 <vfprintf+0x2b2>
     e12:	81 2c       	mov	r8, r1
     e14:	91 2c       	mov	r9, r1
     e16:	c6 01       	movw	r24, r12
     e18:	88 19       	sub	r24, r8
     e1a:	99 09       	sbc	r25, r9
     e1c:	f3 01       	movw	r30, r6
     e1e:	e8 0f       	add	r30, r24
     e20:	f9 1f       	adc	r31, r25
     e22:	fe 87       	std	Y+14, r31	; 0x0e
     e24:	ed 87       	std	Y+13, r30	; 0x0d
     e26:	96 01       	movw	r18, r12
     e28:	24 19       	sub	r18, r4
     e2a:	31 09       	sbc	r19, r1
     e2c:	38 8b       	std	Y+16, r19	; 0x10
     e2e:	2f 87       	std	Y+15, r18	; 0x0f
     e30:	01 2f       	mov	r16, r17
     e32:	10 e0       	ldi	r17, 0x00	; 0
     e34:	11 95       	neg	r17
     e36:	01 95       	neg	r16
     e38:	11 09       	sbc	r17, r1
     e3a:	3f ef       	ldi	r19, 0xFF	; 255
     e3c:	83 16       	cp	r8, r19
     e3e:	93 06       	cpc	r9, r19
     e40:	29 f4       	brne	.+10     	; 0xe4c <vfprintf+0x2e8>
     e42:	b7 01       	movw	r22, r14
     e44:	8e e2       	ldi	r24, 0x2E	; 46
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
     e4c:	c8 14       	cp	r12, r8
     e4e:	d9 04       	cpc	r13, r9
     e50:	4c f0       	brlt	.+18     	; 0xe64 <vfprintf+0x300>
     e52:	8f 85       	ldd	r24, Y+15	; 0x0f
     e54:	98 89       	ldd	r25, Y+16	; 0x10
     e56:	88 15       	cp	r24, r8
     e58:	99 05       	cpc	r25, r9
     e5a:	24 f4       	brge	.+8      	; 0xe64 <vfprintf+0x300>
     e5c:	ed 85       	ldd	r30, Y+13	; 0x0d
     e5e:	fe 85       	ldd	r31, Y+14	; 0x0e
     e60:	81 81       	ldd	r24, Z+1	; 0x01
     e62:	01 c0       	rjmp	.+2      	; 0xe66 <vfprintf+0x302>
     e64:	80 e3       	ldi	r24, 0x30	; 48
     e66:	f1 e0       	ldi	r31, 0x01	; 1
     e68:	8f 1a       	sub	r8, r31
     e6a:	91 08       	sbc	r9, r1
     e6c:	2d 85       	ldd	r18, Y+13	; 0x0d
     e6e:	3e 85       	ldd	r19, Y+14	; 0x0e
     e70:	2f 5f       	subi	r18, 0xFF	; 255
     e72:	3f 4f       	sbci	r19, 0xFF	; 255
     e74:	3e 87       	std	Y+14, r19	; 0x0e
     e76:	2d 87       	std	Y+13, r18	; 0x0d
     e78:	80 16       	cp	r8, r16
     e7a:	91 06       	cpc	r9, r17
     e7c:	2c f0       	brlt	.+10     	; 0xe88 <vfprintf+0x324>
     e7e:	b7 01       	movw	r22, r14
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
     e86:	d9 cf       	rjmp	.-78     	; 0xe3a <vfprintf+0x2d6>
     e88:	c8 14       	cp	r12, r8
     e8a:	d9 04       	cpc	r13, r9
     e8c:	41 f4       	brne	.+16     	; 0xe9e <vfprintf+0x33a>
     e8e:	9a 81       	ldd	r25, Y+2	; 0x02
     e90:	96 33       	cpi	r25, 0x36	; 54
     e92:	20 f4       	brcc	.+8      	; 0xe9c <vfprintf+0x338>
     e94:	95 33       	cpi	r25, 0x35	; 53
     e96:	19 f4       	brne	.+6      	; 0xe9e <vfprintf+0x33a>
     e98:	3c 85       	ldd	r19, Y+12	; 0x0c
     e9a:	34 ff       	sbrs	r19, 4
     e9c:	81 e3       	ldi	r24, 0x31	; 49
     e9e:	b7 01       	movw	r22, r14
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	4e c0       	rjmp	.+156    	; 0xf40 <vfprintf+0x3dc>
     ea4:	8a 81       	ldd	r24, Y+2	; 0x02
     ea6:	81 33       	cpi	r24, 0x31	; 49
     ea8:	19 f0       	breq	.+6      	; 0xeb0 <vfprintf+0x34c>
     eaa:	9c 85       	ldd	r25, Y+12	; 0x0c
     eac:	9f 7e       	andi	r25, 0xEF	; 239
     eae:	9c 87       	std	Y+12, r25	; 0x0c
     eb0:	b7 01       	movw	r22, r14
     eb2:	90 e0       	ldi	r25, 0x00	; 0
     eb4:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
     eb8:	11 11       	cpse	r17, r1
     eba:	05 c0       	rjmp	.+10     	; 0xec6 <vfprintf+0x362>
     ebc:	94 fc       	sbrc	r9, 4
     ebe:	18 c0       	rjmp	.+48     	; 0xef0 <vfprintf+0x38c>
     ec0:	85 e6       	ldi	r24, 0x65	; 101
     ec2:	90 e0       	ldi	r25, 0x00	; 0
     ec4:	17 c0       	rjmp	.+46     	; 0xef4 <vfprintf+0x390>
     ec6:	b7 01       	movw	r22, r14
     ec8:	8e e2       	ldi	r24, 0x2E	; 46
     eca:	90 e0       	ldi	r25, 0x00	; 0
     ecc:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
     ed0:	1e 5f       	subi	r17, 0xFE	; 254
     ed2:	82 e0       	ldi	r24, 0x02	; 2
     ed4:	01 e0       	ldi	r16, 0x01	; 1
     ed6:	08 0f       	add	r16, r24
     ed8:	f3 01       	movw	r30, r6
     eda:	e8 0f       	add	r30, r24
     edc:	f1 1d       	adc	r31, r1
     ede:	80 81       	ld	r24, Z
     ee0:	b7 01       	movw	r22, r14
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
     ee8:	80 2f       	mov	r24, r16
     eea:	01 13       	cpse	r16, r17
     eec:	f3 cf       	rjmp	.-26     	; 0xed4 <vfprintf+0x370>
     eee:	e6 cf       	rjmp	.-52     	; 0xebc <vfprintf+0x358>
     ef0:	85 e4       	ldi	r24, 0x45	; 69
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	b7 01       	movw	r22, r14
     ef6:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
     efa:	d7 fc       	sbrc	r13, 7
     efc:	06 c0       	rjmp	.+12     	; 0xf0a <vfprintf+0x3a6>
     efe:	c1 14       	cp	r12, r1
     f00:	d1 04       	cpc	r13, r1
     f02:	41 f4       	brne	.+16     	; 0xf14 <vfprintf+0x3b0>
     f04:	ec 85       	ldd	r30, Y+12	; 0x0c
     f06:	e4 ff       	sbrs	r30, 4
     f08:	05 c0       	rjmp	.+10     	; 0xf14 <vfprintf+0x3b0>
     f0a:	d1 94       	neg	r13
     f0c:	c1 94       	neg	r12
     f0e:	d1 08       	sbc	r13, r1
     f10:	8d e2       	ldi	r24, 0x2D	; 45
     f12:	01 c0       	rjmp	.+2      	; 0xf16 <vfprintf+0x3b2>
     f14:	8b e2       	ldi	r24, 0x2B	; 43
     f16:	b7 01       	movw	r22, r14
     f18:	90 e0       	ldi	r25, 0x00	; 0
     f1a:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
     f1e:	80 e3       	ldi	r24, 0x30	; 48
     f20:	2a e0       	ldi	r18, 0x0A	; 10
     f22:	c2 16       	cp	r12, r18
     f24:	d1 04       	cpc	r13, r1
     f26:	2c f0       	brlt	.+10     	; 0xf32 <vfprintf+0x3ce>
     f28:	8f 5f       	subi	r24, 0xFF	; 255
     f2a:	fa e0       	ldi	r31, 0x0A	; 10
     f2c:	cf 1a       	sub	r12, r31
     f2e:	d1 08       	sbc	r13, r1
     f30:	f7 cf       	rjmp	.-18     	; 0xf20 <vfprintf+0x3bc>
     f32:	b7 01       	movw	r22, r14
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
     f3a:	b7 01       	movw	r22, r14
     f3c:	c6 01       	movw	r24, r12
     f3e:	c0 96       	adiw	r24, 0x30	; 48
     f40:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
     f44:	54 c1       	rjmp	.+680    	; 0x11ee <vfprintf+0x68a>
     f46:	83 36       	cpi	r24, 0x63	; 99
     f48:	31 f0       	breq	.+12     	; 0xf56 <vfprintf+0x3f2>
     f4a:	83 37       	cpi	r24, 0x73	; 115
     f4c:	79 f0       	breq	.+30     	; 0xf6c <vfprintf+0x408>
     f4e:	83 35       	cpi	r24, 0x53	; 83
     f50:	09 f0       	breq	.+2      	; 0xf54 <vfprintf+0x3f0>
     f52:	56 c0       	rjmp	.+172    	; 0x1000 <vfprintf+0x49c>
     f54:	20 c0       	rjmp	.+64     	; 0xf96 <vfprintf+0x432>
     f56:	56 01       	movw	r10, r12
     f58:	32 e0       	ldi	r19, 0x02	; 2
     f5a:	a3 0e       	add	r10, r19
     f5c:	b1 1c       	adc	r11, r1
     f5e:	f6 01       	movw	r30, r12
     f60:	80 81       	ld	r24, Z
     f62:	89 83       	std	Y+1, r24	; 0x01
     f64:	01 e0       	ldi	r16, 0x01	; 1
     f66:	10 e0       	ldi	r17, 0x00	; 0
     f68:	63 01       	movw	r12, r6
     f6a:	12 c0       	rjmp	.+36     	; 0xf90 <vfprintf+0x42c>
     f6c:	56 01       	movw	r10, r12
     f6e:	f2 e0       	ldi	r31, 0x02	; 2
     f70:	af 0e       	add	r10, r31
     f72:	b1 1c       	adc	r11, r1
     f74:	f6 01       	movw	r30, r12
     f76:	c0 80       	ld	r12, Z
     f78:	d1 80       	ldd	r13, Z+1	; 0x01
     f7a:	96 fe       	sbrs	r9, 6
     f7c:	03 c0       	rjmp	.+6      	; 0xf84 <vfprintf+0x420>
     f7e:	61 2f       	mov	r22, r17
     f80:	70 e0       	ldi	r23, 0x00	; 0
     f82:	02 c0       	rjmp	.+4      	; 0xf88 <vfprintf+0x424>
     f84:	6f ef       	ldi	r22, 0xFF	; 255
     f86:	7f ef       	ldi	r23, 0xFF	; 255
     f88:	c6 01       	movw	r24, r12
     f8a:	0e 94 49 0a 	call	0x1492	; 0x1492 <strnlen>
     f8e:	8c 01       	movw	r16, r24
     f90:	f9 2d       	mov	r31, r9
     f92:	ff 77       	andi	r31, 0x7F	; 127
     f94:	14 c0       	rjmp	.+40     	; 0xfbe <vfprintf+0x45a>
     f96:	56 01       	movw	r10, r12
     f98:	22 e0       	ldi	r18, 0x02	; 2
     f9a:	a2 0e       	add	r10, r18
     f9c:	b1 1c       	adc	r11, r1
     f9e:	f6 01       	movw	r30, r12
     fa0:	c0 80       	ld	r12, Z
     fa2:	d1 80       	ldd	r13, Z+1	; 0x01
     fa4:	96 fe       	sbrs	r9, 6
     fa6:	03 c0       	rjmp	.+6      	; 0xfae <vfprintf+0x44a>
     fa8:	61 2f       	mov	r22, r17
     faa:	70 e0       	ldi	r23, 0x00	; 0
     fac:	02 c0       	rjmp	.+4      	; 0xfb2 <vfprintf+0x44e>
     fae:	6f ef       	ldi	r22, 0xFF	; 255
     fb0:	7f ef       	ldi	r23, 0xFF	; 255
     fb2:	c6 01       	movw	r24, r12
     fb4:	0e 94 3e 0a 	call	0x147c	; 0x147c <strnlen_P>
     fb8:	8c 01       	movw	r16, r24
     fba:	f9 2d       	mov	r31, r9
     fbc:	f0 68       	ori	r31, 0x80	; 128
     fbe:	9f 2e       	mov	r9, r31
     fc0:	f3 fd       	sbrc	r31, 3
     fc2:	1a c0       	rjmp	.+52     	; 0xff8 <vfprintf+0x494>
     fc4:	85 2d       	mov	r24, r5
     fc6:	90 e0       	ldi	r25, 0x00	; 0
     fc8:	08 17       	cp	r16, r24
     fca:	19 07       	cpc	r17, r25
     fcc:	a8 f4       	brcc	.+42     	; 0xff8 <vfprintf+0x494>
     fce:	b7 01       	movw	r22, r14
     fd0:	80 e2       	ldi	r24, 0x20	; 32
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
     fd8:	5a 94       	dec	r5
     fda:	f4 cf       	rjmp	.-24     	; 0xfc4 <vfprintf+0x460>
     fdc:	f6 01       	movw	r30, r12
     fde:	97 fc       	sbrc	r9, 7
     fe0:	85 91       	lpm	r24, Z+
     fe2:	97 fe       	sbrs	r9, 7
     fe4:	81 91       	ld	r24, Z+
     fe6:	6f 01       	movw	r12, r30
     fe8:	b7 01       	movw	r22, r14
     fea:	90 e0       	ldi	r25, 0x00	; 0
     fec:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
     ff0:	51 10       	cpse	r5, r1
     ff2:	5a 94       	dec	r5
     ff4:	01 50       	subi	r16, 0x01	; 1
     ff6:	11 09       	sbc	r17, r1
     ff8:	01 15       	cp	r16, r1
     ffa:	11 05       	cpc	r17, r1
     ffc:	79 f7       	brne	.-34     	; 0xfdc <vfprintf+0x478>
     ffe:	f7 c0       	rjmp	.+494    	; 0x11ee <vfprintf+0x68a>
    1000:	84 36       	cpi	r24, 0x64	; 100
    1002:	11 f0       	breq	.+4      	; 0x1008 <vfprintf+0x4a4>
    1004:	89 36       	cpi	r24, 0x69	; 105
    1006:	61 f5       	brne	.+88     	; 0x1060 <vfprintf+0x4fc>
    1008:	56 01       	movw	r10, r12
    100a:	97 fe       	sbrs	r9, 7
    100c:	09 c0       	rjmp	.+18     	; 0x1020 <vfprintf+0x4bc>
    100e:	24 e0       	ldi	r18, 0x04	; 4
    1010:	a2 0e       	add	r10, r18
    1012:	b1 1c       	adc	r11, r1
    1014:	f6 01       	movw	r30, r12
    1016:	60 81       	ld	r22, Z
    1018:	71 81       	ldd	r23, Z+1	; 0x01
    101a:	82 81       	ldd	r24, Z+2	; 0x02
    101c:	93 81       	ldd	r25, Z+3	; 0x03
    101e:	0a c0       	rjmp	.+20     	; 0x1034 <vfprintf+0x4d0>
    1020:	f2 e0       	ldi	r31, 0x02	; 2
    1022:	af 0e       	add	r10, r31
    1024:	b1 1c       	adc	r11, r1
    1026:	f6 01       	movw	r30, r12
    1028:	60 81       	ld	r22, Z
    102a:	71 81       	ldd	r23, Z+1	; 0x01
    102c:	07 2e       	mov	r0, r23
    102e:	00 0c       	add	r0, r0
    1030:	88 0b       	sbc	r24, r24
    1032:	99 0b       	sbc	r25, r25
    1034:	f9 2d       	mov	r31, r9
    1036:	ff 76       	andi	r31, 0x6F	; 111
    1038:	9f 2e       	mov	r9, r31
    103a:	97 ff       	sbrs	r25, 7
    103c:	09 c0       	rjmp	.+18     	; 0x1050 <vfprintf+0x4ec>
    103e:	90 95       	com	r25
    1040:	80 95       	com	r24
    1042:	70 95       	com	r23
    1044:	61 95       	neg	r22
    1046:	7f 4f       	sbci	r23, 0xFF	; 255
    1048:	8f 4f       	sbci	r24, 0xFF	; 255
    104a:	9f 4f       	sbci	r25, 0xFF	; 255
    104c:	f0 68       	ori	r31, 0x80	; 128
    104e:	9f 2e       	mov	r9, r31
    1050:	2a e0       	ldi	r18, 0x0A	; 10
    1052:	30 e0       	ldi	r19, 0x00	; 0
    1054:	a3 01       	movw	r20, r6
    1056:	0e 94 a6 0a 	call	0x154c	; 0x154c <__ultoa_invert>
    105a:	c8 2e       	mov	r12, r24
    105c:	c6 18       	sub	r12, r6
    105e:	3f c0       	rjmp	.+126    	; 0x10de <vfprintf+0x57a>
    1060:	09 2d       	mov	r16, r9
    1062:	85 37       	cpi	r24, 0x75	; 117
    1064:	21 f4       	brne	.+8      	; 0x106e <vfprintf+0x50a>
    1066:	0f 7e       	andi	r16, 0xEF	; 239
    1068:	2a e0       	ldi	r18, 0x0A	; 10
    106a:	30 e0       	ldi	r19, 0x00	; 0
    106c:	1d c0       	rjmp	.+58     	; 0x10a8 <vfprintf+0x544>
    106e:	09 7f       	andi	r16, 0xF9	; 249
    1070:	8f 36       	cpi	r24, 0x6F	; 111
    1072:	91 f0       	breq	.+36     	; 0x1098 <vfprintf+0x534>
    1074:	18 f4       	brcc	.+6      	; 0x107c <vfprintf+0x518>
    1076:	88 35       	cpi	r24, 0x58	; 88
    1078:	59 f0       	breq	.+22     	; 0x1090 <vfprintf+0x52c>
    107a:	c3 c0       	rjmp	.+390    	; 0x1202 <vfprintf+0x69e>
    107c:	80 37       	cpi	r24, 0x70	; 112
    107e:	19 f0       	breq	.+6      	; 0x1086 <vfprintf+0x522>
    1080:	88 37       	cpi	r24, 0x78	; 120
    1082:	11 f0       	breq	.+4      	; 0x1088 <vfprintf+0x524>
    1084:	be c0       	rjmp	.+380    	; 0x1202 <vfprintf+0x69e>
    1086:	00 61       	ori	r16, 0x10	; 16
    1088:	04 ff       	sbrs	r16, 4
    108a:	09 c0       	rjmp	.+18     	; 0x109e <vfprintf+0x53a>
    108c:	04 60       	ori	r16, 0x04	; 4
    108e:	07 c0       	rjmp	.+14     	; 0x109e <vfprintf+0x53a>
    1090:	94 fe       	sbrs	r9, 4
    1092:	08 c0       	rjmp	.+16     	; 0x10a4 <vfprintf+0x540>
    1094:	06 60       	ori	r16, 0x06	; 6
    1096:	06 c0       	rjmp	.+12     	; 0x10a4 <vfprintf+0x540>
    1098:	28 e0       	ldi	r18, 0x08	; 8
    109a:	30 e0       	ldi	r19, 0x00	; 0
    109c:	05 c0       	rjmp	.+10     	; 0x10a8 <vfprintf+0x544>
    109e:	20 e1       	ldi	r18, 0x10	; 16
    10a0:	30 e0       	ldi	r19, 0x00	; 0
    10a2:	02 c0       	rjmp	.+4      	; 0x10a8 <vfprintf+0x544>
    10a4:	20 e1       	ldi	r18, 0x10	; 16
    10a6:	32 e0       	ldi	r19, 0x02	; 2
    10a8:	56 01       	movw	r10, r12
    10aa:	07 ff       	sbrs	r16, 7
    10ac:	09 c0       	rjmp	.+18     	; 0x10c0 <vfprintf+0x55c>
    10ae:	84 e0       	ldi	r24, 0x04	; 4
    10b0:	a8 0e       	add	r10, r24
    10b2:	b1 1c       	adc	r11, r1
    10b4:	f6 01       	movw	r30, r12
    10b6:	60 81       	ld	r22, Z
    10b8:	71 81       	ldd	r23, Z+1	; 0x01
    10ba:	82 81       	ldd	r24, Z+2	; 0x02
    10bc:	93 81       	ldd	r25, Z+3	; 0x03
    10be:	08 c0       	rjmp	.+16     	; 0x10d0 <vfprintf+0x56c>
    10c0:	f2 e0       	ldi	r31, 0x02	; 2
    10c2:	af 0e       	add	r10, r31
    10c4:	b1 1c       	adc	r11, r1
    10c6:	f6 01       	movw	r30, r12
    10c8:	60 81       	ld	r22, Z
    10ca:	71 81       	ldd	r23, Z+1	; 0x01
    10cc:	80 e0       	ldi	r24, 0x00	; 0
    10ce:	90 e0       	ldi	r25, 0x00	; 0
    10d0:	a3 01       	movw	r20, r6
    10d2:	0e 94 a6 0a 	call	0x154c	; 0x154c <__ultoa_invert>
    10d6:	c8 2e       	mov	r12, r24
    10d8:	c6 18       	sub	r12, r6
    10da:	0f 77       	andi	r16, 0x7F	; 127
    10dc:	90 2e       	mov	r9, r16
    10de:	96 fe       	sbrs	r9, 6
    10e0:	0b c0       	rjmp	.+22     	; 0x10f8 <vfprintf+0x594>
    10e2:	09 2d       	mov	r16, r9
    10e4:	0e 7f       	andi	r16, 0xFE	; 254
    10e6:	c1 16       	cp	r12, r17
    10e8:	50 f4       	brcc	.+20     	; 0x10fe <vfprintf+0x59a>
    10ea:	94 fe       	sbrs	r9, 4
    10ec:	0a c0       	rjmp	.+20     	; 0x1102 <vfprintf+0x59e>
    10ee:	92 fc       	sbrc	r9, 2
    10f0:	08 c0       	rjmp	.+16     	; 0x1102 <vfprintf+0x59e>
    10f2:	09 2d       	mov	r16, r9
    10f4:	0e 7e       	andi	r16, 0xEE	; 238
    10f6:	05 c0       	rjmp	.+10     	; 0x1102 <vfprintf+0x59e>
    10f8:	dc 2c       	mov	r13, r12
    10fa:	09 2d       	mov	r16, r9
    10fc:	03 c0       	rjmp	.+6      	; 0x1104 <vfprintf+0x5a0>
    10fe:	dc 2c       	mov	r13, r12
    1100:	01 c0       	rjmp	.+2      	; 0x1104 <vfprintf+0x5a0>
    1102:	d1 2e       	mov	r13, r17
    1104:	04 ff       	sbrs	r16, 4
    1106:	0d c0       	rjmp	.+26     	; 0x1122 <vfprintf+0x5be>
    1108:	fe 01       	movw	r30, r28
    110a:	ec 0d       	add	r30, r12
    110c:	f1 1d       	adc	r31, r1
    110e:	80 81       	ld	r24, Z
    1110:	80 33       	cpi	r24, 0x30	; 48
    1112:	11 f4       	brne	.+4      	; 0x1118 <vfprintf+0x5b4>
    1114:	09 7e       	andi	r16, 0xE9	; 233
    1116:	09 c0       	rjmp	.+18     	; 0x112a <vfprintf+0x5c6>
    1118:	02 ff       	sbrs	r16, 2
    111a:	06 c0       	rjmp	.+12     	; 0x1128 <vfprintf+0x5c4>
    111c:	d3 94       	inc	r13
    111e:	d3 94       	inc	r13
    1120:	04 c0       	rjmp	.+8      	; 0x112a <vfprintf+0x5c6>
    1122:	80 2f       	mov	r24, r16
    1124:	86 78       	andi	r24, 0x86	; 134
    1126:	09 f0       	breq	.+2      	; 0x112a <vfprintf+0x5c6>
    1128:	d3 94       	inc	r13
    112a:	03 fd       	sbrc	r16, 3
    112c:	11 c0       	rjmp	.+34     	; 0x1150 <vfprintf+0x5ec>
    112e:	00 ff       	sbrs	r16, 0
    1130:	06 c0       	rjmp	.+12     	; 0x113e <vfprintf+0x5da>
    1132:	1c 2d       	mov	r17, r12
    1134:	d5 14       	cp	r13, r5
    1136:	80 f4       	brcc	.+32     	; 0x1158 <vfprintf+0x5f4>
    1138:	15 0d       	add	r17, r5
    113a:	1d 19       	sub	r17, r13
    113c:	0d c0       	rjmp	.+26     	; 0x1158 <vfprintf+0x5f4>
    113e:	d5 14       	cp	r13, r5
    1140:	58 f4       	brcc	.+22     	; 0x1158 <vfprintf+0x5f4>
    1142:	b7 01       	movw	r22, r14
    1144:	80 e2       	ldi	r24, 0x20	; 32
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
    114c:	d3 94       	inc	r13
    114e:	f7 cf       	rjmp	.-18     	; 0x113e <vfprintf+0x5da>
    1150:	d5 14       	cp	r13, r5
    1152:	10 f4       	brcc	.+4      	; 0x1158 <vfprintf+0x5f4>
    1154:	5d 18       	sub	r5, r13
    1156:	01 c0       	rjmp	.+2      	; 0x115a <vfprintf+0x5f6>
    1158:	51 2c       	mov	r5, r1
    115a:	04 ff       	sbrs	r16, 4
    115c:	10 c0       	rjmp	.+32     	; 0x117e <vfprintf+0x61a>
    115e:	b7 01       	movw	r22, r14
    1160:	80 e3       	ldi	r24, 0x30	; 48
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
    1168:	02 ff       	sbrs	r16, 2
    116a:	17 c0       	rjmp	.+46     	; 0x119a <vfprintf+0x636>
    116c:	01 fd       	sbrc	r16, 1
    116e:	03 c0       	rjmp	.+6      	; 0x1176 <vfprintf+0x612>
    1170:	88 e7       	ldi	r24, 0x78	; 120
    1172:	90 e0       	ldi	r25, 0x00	; 0
    1174:	02 c0       	rjmp	.+4      	; 0x117a <vfprintf+0x616>
    1176:	88 e5       	ldi	r24, 0x58	; 88
    1178:	90 e0       	ldi	r25, 0x00	; 0
    117a:	b7 01       	movw	r22, r14
    117c:	0c c0       	rjmp	.+24     	; 0x1196 <vfprintf+0x632>
    117e:	80 2f       	mov	r24, r16
    1180:	86 78       	andi	r24, 0x86	; 134
    1182:	59 f0       	breq	.+22     	; 0x119a <vfprintf+0x636>
    1184:	01 ff       	sbrs	r16, 1
    1186:	02 c0       	rjmp	.+4      	; 0x118c <vfprintf+0x628>
    1188:	8b e2       	ldi	r24, 0x2B	; 43
    118a:	01 c0       	rjmp	.+2      	; 0x118e <vfprintf+0x62a>
    118c:	80 e2       	ldi	r24, 0x20	; 32
    118e:	07 fd       	sbrc	r16, 7
    1190:	8d e2       	ldi	r24, 0x2D	; 45
    1192:	b7 01       	movw	r22, r14
    1194:	90 e0       	ldi	r25, 0x00	; 0
    1196:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
    119a:	c1 16       	cp	r12, r17
    119c:	38 f4       	brcc	.+14     	; 0x11ac <vfprintf+0x648>
    119e:	b7 01       	movw	r22, r14
    11a0:	80 e3       	ldi	r24, 0x30	; 48
    11a2:	90 e0       	ldi	r25, 0x00	; 0
    11a4:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
    11a8:	11 50       	subi	r17, 0x01	; 1
    11aa:	f7 cf       	rjmp	.-18     	; 0x119a <vfprintf+0x636>
    11ac:	ca 94       	dec	r12
    11ae:	f3 01       	movw	r30, r6
    11b0:	ec 0d       	add	r30, r12
    11b2:	f1 1d       	adc	r31, r1
    11b4:	80 81       	ld	r24, Z
    11b6:	b7 01       	movw	r22, r14
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
    11be:	c1 10       	cpse	r12, r1
    11c0:	f5 cf       	rjmp	.-22     	; 0x11ac <vfprintf+0x648>
    11c2:	15 c0       	rjmp	.+42     	; 0x11ee <vfprintf+0x68a>
    11c4:	f4 e0       	ldi	r31, 0x04	; 4
    11c6:	f5 15       	cp	r31, r5
    11c8:	60 f5       	brcc	.+88     	; 0x1222 <vfprintf+0x6be>
    11ca:	84 e0       	ldi	r24, 0x04	; 4
    11cc:	58 1a       	sub	r5, r24
    11ce:	93 fe       	sbrs	r9, 3
    11d0:	1f c0       	rjmp	.+62     	; 0x1210 <vfprintf+0x6ac>
    11d2:	01 11       	cpse	r16, r1
    11d4:	27 c0       	rjmp	.+78     	; 0x1224 <vfprintf+0x6c0>
    11d6:	2c 85       	ldd	r18, Y+12	; 0x0c
    11d8:	23 ff       	sbrs	r18, 3
    11da:	2a c0       	rjmp	.+84     	; 0x1230 <vfprintf+0x6cc>
    11dc:	08 e6       	ldi	r16, 0x68	; 104
    11de:	10 e0       	ldi	r17, 0x00	; 0
    11e0:	39 2d       	mov	r19, r9
    11e2:	30 71       	andi	r19, 0x10	; 16
    11e4:	93 2e       	mov	r9, r19
    11e6:	f8 01       	movw	r30, r16
    11e8:	84 91       	lpm	r24, Z
    11ea:	81 11       	cpse	r24, r1
    11ec:	24 c0       	rjmp	.+72     	; 0x1236 <vfprintf+0x6d2>
    11ee:	55 20       	and	r5, r5
    11f0:	09 f4       	brne	.+2      	; 0x11f4 <vfprintf+0x690>
    11f2:	e4 cc       	rjmp	.-1592   	; 0xbbc <vfprintf+0x58>
    11f4:	b7 01       	movw	r22, r14
    11f6:	80 e2       	ldi	r24, 0x20	; 32
    11f8:	90 e0       	ldi	r25, 0x00	; 0
    11fa:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
    11fe:	5a 94       	dec	r5
    1200:	f6 cf       	rjmp	.-20     	; 0x11ee <vfprintf+0x68a>
    1202:	f7 01       	movw	r30, r14
    1204:	86 81       	ldd	r24, Z+6	; 0x06
    1206:	97 81       	ldd	r25, Z+7	; 0x07
    1208:	26 c0       	rjmp	.+76     	; 0x1256 <vfprintf+0x6f2>
    120a:	8f ef       	ldi	r24, 0xFF	; 255
    120c:	9f ef       	ldi	r25, 0xFF	; 255
    120e:	23 c0       	rjmp	.+70     	; 0x1256 <vfprintf+0x6f2>
    1210:	b7 01       	movw	r22, r14
    1212:	80 e2       	ldi	r24, 0x20	; 32
    1214:	90 e0       	ldi	r25, 0x00	; 0
    1216:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
    121a:	5a 94       	dec	r5
    121c:	51 10       	cpse	r5, r1
    121e:	f8 cf       	rjmp	.-16     	; 0x1210 <vfprintf+0x6ac>
    1220:	d8 cf       	rjmp	.-80     	; 0x11d2 <vfprintf+0x66e>
    1222:	51 2c       	mov	r5, r1
    1224:	b7 01       	movw	r22, r14
    1226:	80 2f       	mov	r24, r16
    1228:	90 e0       	ldi	r25, 0x00	; 0
    122a:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
    122e:	d3 cf       	rjmp	.-90     	; 0x11d6 <vfprintf+0x672>
    1230:	0c e6       	ldi	r16, 0x6C	; 108
    1232:	10 e0       	ldi	r17, 0x00	; 0
    1234:	d5 cf       	rjmp	.-86     	; 0x11e0 <vfprintf+0x67c>
    1236:	91 10       	cpse	r9, r1
    1238:	80 52       	subi	r24, 0x20	; 32
    123a:	b7 01       	movw	r22, r14
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <fputc>
    1242:	0f 5f       	subi	r16, 0xFF	; 255
    1244:	1f 4f       	sbci	r17, 0xFF	; 255
    1246:	cf cf       	rjmp	.-98     	; 0x11e6 <vfprintf+0x682>
    1248:	23 e0       	ldi	r18, 0x03	; 3
    124a:	25 15       	cp	r18, r5
    124c:	10 f4       	brcc	.+4      	; 0x1252 <vfprintf+0x6ee>
    124e:	83 e0       	ldi	r24, 0x03	; 3
    1250:	bd cf       	rjmp	.-134    	; 0x11cc <vfprintf+0x668>
    1252:	51 2c       	mov	r5, r1
    1254:	c0 cf       	rjmp	.-128    	; 0x11d6 <vfprintf+0x672>
    1256:	60 96       	adiw	r28, 0x10	; 16
    1258:	e2 e1       	ldi	r30, 0x12	; 18
    125a:	0c 94 4b 09 	jmp	0x1296	; 0x1296 <__epilogue_restores__>

0000125e <__prologue_saves__>:
    125e:	2f 92       	push	r2
    1260:	3f 92       	push	r3
    1262:	4f 92       	push	r4
    1264:	5f 92       	push	r5
    1266:	6f 92       	push	r6
    1268:	7f 92       	push	r7
    126a:	8f 92       	push	r8
    126c:	9f 92       	push	r9
    126e:	af 92       	push	r10
    1270:	bf 92       	push	r11
    1272:	cf 92       	push	r12
    1274:	df 92       	push	r13
    1276:	ef 92       	push	r14
    1278:	ff 92       	push	r15
    127a:	0f 93       	push	r16
    127c:	1f 93       	push	r17
    127e:	cf 93       	push	r28
    1280:	df 93       	push	r29
    1282:	cd b7       	in	r28, 0x3d	; 61
    1284:	de b7       	in	r29, 0x3e	; 62
    1286:	ca 1b       	sub	r28, r26
    1288:	db 0b       	sbc	r29, r27
    128a:	0f b6       	in	r0, 0x3f	; 63
    128c:	f8 94       	cli
    128e:	de bf       	out	0x3e, r29	; 62
    1290:	0f be       	out	0x3f, r0	; 63
    1292:	cd bf       	out	0x3d, r28	; 61
    1294:	09 94       	ijmp

00001296 <__epilogue_restores__>:
    1296:	2a 88       	ldd	r2, Y+18	; 0x12
    1298:	39 88       	ldd	r3, Y+17	; 0x11
    129a:	48 88       	ldd	r4, Y+16	; 0x10
    129c:	5f 84       	ldd	r5, Y+15	; 0x0f
    129e:	6e 84       	ldd	r6, Y+14	; 0x0e
    12a0:	7d 84       	ldd	r7, Y+13	; 0x0d
    12a2:	8c 84       	ldd	r8, Y+12	; 0x0c
    12a4:	9b 84       	ldd	r9, Y+11	; 0x0b
    12a6:	aa 84       	ldd	r10, Y+10	; 0x0a
    12a8:	b9 84       	ldd	r11, Y+9	; 0x09
    12aa:	c8 84       	ldd	r12, Y+8	; 0x08
    12ac:	df 80       	ldd	r13, Y+7	; 0x07
    12ae:	ee 80       	ldd	r14, Y+6	; 0x06
    12b0:	fd 80       	ldd	r15, Y+5	; 0x05
    12b2:	0c 81       	ldd	r16, Y+4	; 0x04
    12b4:	1b 81       	ldd	r17, Y+3	; 0x03
    12b6:	aa 81       	ldd	r26, Y+2	; 0x02
    12b8:	b9 81       	ldd	r27, Y+1	; 0x01
    12ba:	ce 0f       	add	r28, r30
    12bc:	d1 1d       	adc	r29, r1
    12be:	0f b6       	in	r0, 0x3f	; 63
    12c0:	f8 94       	cli
    12c2:	de bf       	out	0x3e, r29	; 62
    12c4:	0f be       	out	0x3f, r0	; 63
    12c6:	cd bf       	out	0x3d, r28	; 61
    12c8:	ed 01       	movw	r28, r26
    12ca:	08 95       	ret

000012cc <__ftoa_engine>:
    12cc:	28 30       	cpi	r18, 0x08	; 8
    12ce:	08 f0       	brcs	.+2      	; 0x12d2 <__ftoa_engine+0x6>
    12d0:	27 e0       	ldi	r18, 0x07	; 7
    12d2:	33 27       	eor	r19, r19
    12d4:	da 01       	movw	r26, r20
    12d6:	99 0f       	add	r25, r25
    12d8:	31 1d       	adc	r19, r1
    12da:	87 fd       	sbrc	r24, 7
    12dc:	91 60       	ori	r25, 0x01	; 1
    12de:	00 96       	adiw	r24, 0x00	; 0
    12e0:	61 05       	cpc	r22, r1
    12e2:	71 05       	cpc	r23, r1
    12e4:	39 f4       	brne	.+14     	; 0x12f4 <__ftoa_engine+0x28>
    12e6:	32 60       	ori	r19, 0x02	; 2
    12e8:	2e 5f       	subi	r18, 0xFE	; 254
    12ea:	3d 93       	st	X+, r19
    12ec:	30 e3       	ldi	r19, 0x30	; 48
    12ee:	2a 95       	dec	r18
    12f0:	e1 f7       	brne	.-8      	; 0x12ea <__ftoa_engine+0x1e>
    12f2:	08 95       	ret
    12f4:	9f 3f       	cpi	r25, 0xFF	; 255
    12f6:	30 f0       	brcs	.+12     	; 0x1304 <__ftoa_engine+0x38>
    12f8:	80 38       	cpi	r24, 0x80	; 128
    12fa:	71 05       	cpc	r23, r1
    12fc:	61 05       	cpc	r22, r1
    12fe:	09 f0       	breq	.+2      	; 0x1302 <__ftoa_engine+0x36>
    1300:	3c 5f       	subi	r19, 0xFC	; 252
    1302:	3c 5f       	subi	r19, 0xFC	; 252
    1304:	3d 93       	st	X+, r19
    1306:	91 30       	cpi	r25, 0x01	; 1
    1308:	08 f0       	brcs	.+2      	; 0x130c <__ftoa_engine+0x40>
    130a:	80 68       	ori	r24, 0x80	; 128
    130c:	91 1d       	adc	r25, r1
    130e:	df 93       	push	r29
    1310:	cf 93       	push	r28
    1312:	1f 93       	push	r17
    1314:	0f 93       	push	r16
    1316:	ff 92       	push	r15
    1318:	ef 92       	push	r14
    131a:	19 2f       	mov	r17, r25
    131c:	98 7f       	andi	r25, 0xF8	; 248
    131e:	96 95       	lsr	r25
    1320:	e9 2f       	mov	r30, r25
    1322:	96 95       	lsr	r25
    1324:	96 95       	lsr	r25
    1326:	e9 0f       	add	r30, r25
    1328:	ff 27       	eor	r31, r31
    132a:	e6 53       	subi	r30, 0x36	; 54
    132c:	ff 4f       	sbci	r31, 0xFF	; 255
    132e:	99 27       	eor	r25, r25
    1330:	33 27       	eor	r19, r19
    1332:	ee 24       	eor	r14, r14
    1334:	ff 24       	eor	r15, r15
    1336:	a7 01       	movw	r20, r14
    1338:	e7 01       	movw	r28, r14
    133a:	05 90       	lpm	r0, Z+
    133c:	08 94       	sec
    133e:	07 94       	ror	r0
    1340:	28 f4       	brcc	.+10     	; 0x134c <__ftoa_engine+0x80>
    1342:	36 0f       	add	r19, r22
    1344:	e7 1e       	adc	r14, r23
    1346:	f8 1e       	adc	r15, r24
    1348:	49 1f       	adc	r20, r25
    134a:	51 1d       	adc	r21, r1
    134c:	66 0f       	add	r22, r22
    134e:	77 1f       	adc	r23, r23
    1350:	88 1f       	adc	r24, r24
    1352:	99 1f       	adc	r25, r25
    1354:	06 94       	lsr	r0
    1356:	a1 f7       	brne	.-24     	; 0x1340 <__ftoa_engine+0x74>
    1358:	05 90       	lpm	r0, Z+
    135a:	07 94       	ror	r0
    135c:	28 f4       	brcc	.+10     	; 0x1368 <__ftoa_engine+0x9c>
    135e:	e7 0e       	add	r14, r23
    1360:	f8 1e       	adc	r15, r24
    1362:	49 1f       	adc	r20, r25
    1364:	56 1f       	adc	r21, r22
    1366:	c1 1d       	adc	r28, r1
    1368:	77 0f       	add	r23, r23
    136a:	88 1f       	adc	r24, r24
    136c:	99 1f       	adc	r25, r25
    136e:	66 1f       	adc	r22, r22
    1370:	06 94       	lsr	r0
    1372:	a1 f7       	brne	.-24     	; 0x135c <__ftoa_engine+0x90>
    1374:	05 90       	lpm	r0, Z+
    1376:	07 94       	ror	r0
    1378:	28 f4       	brcc	.+10     	; 0x1384 <__ftoa_engine+0xb8>
    137a:	f8 0e       	add	r15, r24
    137c:	49 1f       	adc	r20, r25
    137e:	56 1f       	adc	r21, r22
    1380:	c7 1f       	adc	r28, r23
    1382:	d1 1d       	adc	r29, r1
    1384:	88 0f       	add	r24, r24
    1386:	99 1f       	adc	r25, r25
    1388:	66 1f       	adc	r22, r22
    138a:	77 1f       	adc	r23, r23
    138c:	06 94       	lsr	r0
    138e:	a1 f7       	brne	.-24     	; 0x1378 <__ftoa_engine+0xac>
    1390:	05 90       	lpm	r0, Z+
    1392:	07 94       	ror	r0
    1394:	20 f4       	brcc	.+8      	; 0x139e <__ftoa_engine+0xd2>
    1396:	49 0f       	add	r20, r25
    1398:	56 1f       	adc	r21, r22
    139a:	c7 1f       	adc	r28, r23
    139c:	d8 1f       	adc	r29, r24
    139e:	99 0f       	add	r25, r25
    13a0:	66 1f       	adc	r22, r22
    13a2:	77 1f       	adc	r23, r23
    13a4:	88 1f       	adc	r24, r24
    13a6:	06 94       	lsr	r0
    13a8:	a9 f7       	brne	.-22     	; 0x1394 <__ftoa_engine+0xc8>
    13aa:	84 91       	lpm	r24, Z
    13ac:	10 95       	com	r17
    13ae:	17 70       	andi	r17, 0x07	; 7
    13b0:	41 f0       	breq	.+16     	; 0x13c2 <__ftoa_engine+0xf6>
    13b2:	d6 95       	lsr	r29
    13b4:	c7 95       	ror	r28
    13b6:	57 95       	ror	r21
    13b8:	47 95       	ror	r20
    13ba:	f7 94       	ror	r15
    13bc:	e7 94       	ror	r14
    13be:	1a 95       	dec	r17
    13c0:	c1 f7       	brne	.-16     	; 0x13b2 <__ftoa_engine+0xe6>
    13c2:	e0 e7       	ldi	r30, 0x70	; 112
    13c4:	f0 e0       	ldi	r31, 0x00	; 0
    13c6:	68 94       	set
    13c8:	15 90       	lpm	r1, Z+
    13ca:	15 91       	lpm	r17, Z+
    13cc:	35 91       	lpm	r19, Z+
    13ce:	65 91       	lpm	r22, Z+
    13d0:	95 91       	lpm	r25, Z+
    13d2:	05 90       	lpm	r0, Z+
    13d4:	7f e2       	ldi	r23, 0x2F	; 47
    13d6:	73 95       	inc	r23
    13d8:	e1 18       	sub	r14, r1
    13da:	f1 0a       	sbc	r15, r17
    13dc:	43 0b       	sbc	r20, r19
    13de:	56 0b       	sbc	r21, r22
    13e0:	c9 0b       	sbc	r28, r25
    13e2:	d0 09       	sbc	r29, r0
    13e4:	c0 f7       	brcc	.-16     	; 0x13d6 <__ftoa_engine+0x10a>
    13e6:	e1 0c       	add	r14, r1
    13e8:	f1 1e       	adc	r15, r17
    13ea:	43 1f       	adc	r20, r19
    13ec:	56 1f       	adc	r21, r22
    13ee:	c9 1f       	adc	r28, r25
    13f0:	d0 1d       	adc	r29, r0
    13f2:	7e f4       	brtc	.+30     	; 0x1412 <__ftoa_engine+0x146>
    13f4:	70 33       	cpi	r23, 0x30	; 48
    13f6:	11 f4       	brne	.+4      	; 0x13fc <__ftoa_engine+0x130>
    13f8:	8a 95       	dec	r24
    13fa:	e6 cf       	rjmp	.-52     	; 0x13c8 <__ftoa_engine+0xfc>
    13fc:	e8 94       	clt
    13fe:	01 50       	subi	r16, 0x01	; 1
    1400:	30 f0       	brcs	.+12     	; 0x140e <__ftoa_engine+0x142>
    1402:	08 0f       	add	r16, r24
    1404:	0a f4       	brpl	.+2      	; 0x1408 <__ftoa_engine+0x13c>
    1406:	00 27       	eor	r16, r16
    1408:	02 17       	cp	r16, r18
    140a:	08 f4       	brcc	.+2      	; 0x140e <__ftoa_engine+0x142>
    140c:	20 2f       	mov	r18, r16
    140e:	23 95       	inc	r18
    1410:	02 2f       	mov	r16, r18
    1412:	7a 33       	cpi	r23, 0x3A	; 58
    1414:	28 f0       	brcs	.+10     	; 0x1420 <__ftoa_engine+0x154>
    1416:	79 e3       	ldi	r23, 0x39	; 57
    1418:	7d 93       	st	X+, r23
    141a:	2a 95       	dec	r18
    141c:	e9 f7       	brne	.-6      	; 0x1418 <__ftoa_engine+0x14c>
    141e:	10 c0       	rjmp	.+32     	; 0x1440 <__ftoa_engine+0x174>
    1420:	7d 93       	st	X+, r23
    1422:	2a 95       	dec	r18
    1424:	89 f6       	brne	.-94     	; 0x13c8 <__ftoa_engine+0xfc>
    1426:	06 94       	lsr	r0
    1428:	97 95       	ror	r25
    142a:	67 95       	ror	r22
    142c:	37 95       	ror	r19
    142e:	17 95       	ror	r17
    1430:	17 94       	ror	r1
    1432:	e1 18       	sub	r14, r1
    1434:	f1 0a       	sbc	r15, r17
    1436:	43 0b       	sbc	r20, r19
    1438:	56 0b       	sbc	r21, r22
    143a:	c9 0b       	sbc	r28, r25
    143c:	d0 09       	sbc	r29, r0
    143e:	98 f0       	brcs	.+38     	; 0x1466 <__ftoa_engine+0x19a>
    1440:	23 95       	inc	r18
    1442:	7e 91       	ld	r23, -X
    1444:	73 95       	inc	r23
    1446:	7a 33       	cpi	r23, 0x3A	; 58
    1448:	08 f0       	brcs	.+2      	; 0x144c <__ftoa_engine+0x180>
    144a:	70 e3       	ldi	r23, 0x30	; 48
    144c:	7c 93       	st	X, r23
    144e:	20 13       	cpse	r18, r16
    1450:	b8 f7       	brcc	.-18     	; 0x1440 <__ftoa_engine+0x174>
    1452:	7e 91       	ld	r23, -X
    1454:	70 61       	ori	r23, 0x10	; 16
    1456:	7d 93       	st	X+, r23
    1458:	30 f0       	brcs	.+12     	; 0x1466 <__ftoa_engine+0x19a>
    145a:	83 95       	inc	r24
    145c:	71 e3       	ldi	r23, 0x31	; 49
    145e:	7d 93       	st	X+, r23
    1460:	70 e3       	ldi	r23, 0x30	; 48
    1462:	2a 95       	dec	r18
    1464:	e1 f7       	brne	.-8      	; 0x145e <__ftoa_engine+0x192>
    1466:	11 24       	eor	r1, r1
    1468:	ef 90       	pop	r14
    146a:	ff 90       	pop	r15
    146c:	0f 91       	pop	r16
    146e:	1f 91       	pop	r17
    1470:	cf 91       	pop	r28
    1472:	df 91       	pop	r29
    1474:	99 27       	eor	r25, r25
    1476:	87 fd       	sbrc	r24, 7
    1478:	90 95       	com	r25
    147a:	08 95       	ret

0000147c <strnlen_P>:
    147c:	fc 01       	movw	r30, r24
    147e:	05 90       	lpm	r0, Z+
    1480:	61 50       	subi	r22, 0x01	; 1
    1482:	70 40       	sbci	r23, 0x00	; 0
    1484:	01 10       	cpse	r0, r1
    1486:	d8 f7       	brcc	.-10     	; 0x147e <strnlen_P+0x2>
    1488:	80 95       	com	r24
    148a:	90 95       	com	r25
    148c:	8e 0f       	add	r24, r30
    148e:	9f 1f       	adc	r25, r31
    1490:	08 95       	ret

00001492 <strnlen>:
    1492:	fc 01       	movw	r30, r24
    1494:	61 50       	subi	r22, 0x01	; 1
    1496:	70 40       	sbci	r23, 0x00	; 0
    1498:	01 90       	ld	r0, Z+
    149a:	01 10       	cpse	r0, r1
    149c:	d8 f7       	brcc	.-10     	; 0x1494 <strnlen+0x2>
    149e:	80 95       	com	r24
    14a0:	90 95       	com	r25
    14a2:	8e 0f       	add	r24, r30
    14a4:	9f 1f       	adc	r25, r31
    14a6:	08 95       	ret

000014a8 <fputc>:
    14a8:	0f 93       	push	r16
    14aa:	1f 93       	push	r17
    14ac:	cf 93       	push	r28
    14ae:	df 93       	push	r29
    14b0:	fb 01       	movw	r30, r22
    14b2:	23 81       	ldd	r18, Z+3	; 0x03
    14b4:	21 fd       	sbrc	r18, 1
    14b6:	03 c0       	rjmp	.+6      	; 0x14be <fputc+0x16>
    14b8:	8f ef       	ldi	r24, 0xFF	; 255
    14ba:	9f ef       	ldi	r25, 0xFF	; 255
    14bc:	2c c0       	rjmp	.+88     	; 0x1516 <fputc+0x6e>
    14be:	22 ff       	sbrs	r18, 2
    14c0:	16 c0       	rjmp	.+44     	; 0x14ee <fputc+0x46>
    14c2:	46 81       	ldd	r20, Z+6	; 0x06
    14c4:	57 81       	ldd	r21, Z+7	; 0x07
    14c6:	24 81       	ldd	r18, Z+4	; 0x04
    14c8:	35 81       	ldd	r19, Z+5	; 0x05
    14ca:	42 17       	cp	r20, r18
    14cc:	53 07       	cpc	r21, r19
    14ce:	44 f4       	brge	.+16     	; 0x14e0 <fputc+0x38>
    14d0:	a0 81       	ld	r26, Z
    14d2:	b1 81       	ldd	r27, Z+1	; 0x01
    14d4:	9d 01       	movw	r18, r26
    14d6:	2f 5f       	subi	r18, 0xFF	; 255
    14d8:	3f 4f       	sbci	r19, 0xFF	; 255
    14da:	31 83       	std	Z+1, r19	; 0x01
    14dc:	20 83       	st	Z, r18
    14de:	8c 93       	st	X, r24
    14e0:	26 81       	ldd	r18, Z+6	; 0x06
    14e2:	37 81       	ldd	r19, Z+7	; 0x07
    14e4:	2f 5f       	subi	r18, 0xFF	; 255
    14e6:	3f 4f       	sbci	r19, 0xFF	; 255
    14e8:	37 83       	std	Z+7, r19	; 0x07
    14ea:	26 83       	std	Z+6, r18	; 0x06
    14ec:	14 c0       	rjmp	.+40     	; 0x1516 <fputc+0x6e>
    14ee:	8b 01       	movw	r16, r22
    14f0:	ec 01       	movw	r28, r24
    14f2:	fb 01       	movw	r30, r22
    14f4:	00 84       	ldd	r0, Z+8	; 0x08
    14f6:	f1 85       	ldd	r31, Z+9	; 0x09
    14f8:	e0 2d       	mov	r30, r0
    14fa:	09 95       	icall
    14fc:	89 2b       	or	r24, r25
    14fe:	e1 f6       	brne	.-72     	; 0x14b8 <fputc+0x10>
    1500:	d8 01       	movw	r26, r16
    1502:	16 96       	adiw	r26, 0x06	; 6
    1504:	8d 91       	ld	r24, X+
    1506:	9c 91       	ld	r25, X
    1508:	17 97       	sbiw	r26, 0x07	; 7
    150a:	01 96       	adiw	r24, 0x01	; 1
    150c:	17 96       	adiw	r26, 0x07	; 7
    150e:	9c 93       	st	X, r25
    1510:	8e 93       	st	-X, r24
    1512:	16 97       	sbiw	r26, 0x06	; 6
    1514:	ce 01       	movw	r24, r28
    1516:	df 91       	pop	r29
    1518:	cf 91       	pop	r28
    151a:	1f 91       	pop	r17
    151c:	0f 91       	pop	r16
    151e:	08 95       	ret

00001520 <printf>:
    1520:	a0 e0       	ldi	r26, 0x00	; 0
    1522:	b0 e0       	ldi	r27, 0x00	; 0
    1524:	e6 e9       	ldi	r30, 0x96	; 150
    1526:	fa e0       	ldi	r31, 0x0A	; 10
    1528:	0c 94 3f 09 	jmp	0x127e	; 0x127e <__prologue_saves__+0x20>
    152c:	ae 01       	movw	r20, r28
    152e:	4b 5f       	subi	r20, 0xFB	; 251
    1530:	5f 4f       	sbci	r21, 0xFF	; 255
    1532:	fa 01       	movw	r30, r20
    1534:	61 91       	ld	r22, Z+
    1536:	71 91       	ld	r23, Z+
    1538:	af 01       	movw	r20, r30
    153a:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <__iob+0x2>
    153e:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <__iob+0x3>
    1542:	0e 94 b2 05 	call	0xb64	; 0xb64 <vfprintf>
    1546:	e2 e0       	ldi	r30, 0x02	; 2
    1548:	0c 94 5b 09 	jmp	0x12b6	; 0x12b6 <__epilogue_restores__+0x20>

0000154c <__ultoa_invert>:
    154c:	fa 01       	movw	r30, r20
    154e:	aa 27       	eor	r26, r26
    1550:	28 30       	cpi	r18, 0x08	; 8
    1552:	51 f1       	breq	.+84     	; 0x15a8 <__ultoa_invert+0x5c>
    1554:	20 31       	cpi	r18, 0x10	; 16
    1556:	81 f1       	breq	.+96     	; 0x15b8 <__ultoa_invert+0x6c>
    1558:	e8 94       	clt
    155a:	6f 93       	push	r22
    155c:	6e 7f       	andi	r22, 0xFE	; 254
    155e:	6e 5f       	subi	r22, 0xFE	; 254
    1560:	7f 4f       	sbci	r23, 0xFF	; 255
    1562:	8f 4f       	sbci	r24, 0xFF	; 255
    1564:	9f 4f       	sbci	r25, 0xFF	; 255
    1566:	af 4f       	sbci	r26, 0xFF	; 255
    1568:	b1 e0       	ldi	r27, 0x01	; 1
    156a:	3e d0       	rcall	.+124    	; 0x15e8 <__ultoa_invert+0x9c>
    156c:	b4 e0       	ldi	r27, 0x04	; 4
    156e:	3c d0       	rcall	.+120    	; 0x15e8 <__ultoa_invert+0x9c>
    1570:	67 0f       	add	r22, r23
    1572:	78 1f       	adc	r23, r24
    1574:	89 1f       	adc	r24, r25
    1576:	9a 1f       	adc	r25, r26
    1578:	a1 1d       	adc	r26, r1
    157a:	68 0f       	add	r22, r24
    157c:	79 1f       	adc	r23, r25
    157e:	8a 1f       	adc	r24, r26
    1580:	91 1d       	adc	r25, r1
    1582:	a1 1d       	adc	r26, r1
    1584:	6a 0f       	add	r22, r26
    1586:	71 1d       	adc	r23, r1
    1588:	81 1d       	adc	r24, r1
    158a:	91 1d       	adc	r25, r1
    158c:	a1 1d       	adc	r26, r1
    158e:	20 d0       	rcall	.+64     	; 0x15d0 <__ultoa_invert+0x84>
    1590:	09 f4       	brne	.+2      	; 0x1594 <__ultoa_invert+0x48>
    1592:	68 94       	set
    1594:	3f 91       	pop	r19
    1596:	2a e0       	ldi	r18, 0x0A	; 10
    1598:	26 9f       	mul	r18, r22
    159a:	11 24       	eor	r1, r1
    159c:	30 19       	sub	r19, r0
    159e:	30 5d       	subi	r19, 0xD0	; 208
    15a0:	31 93       	st	Z+, r19
    15a2:	de f6       	brtc	.-74     	; 0x155a <__ultoa_invert+0xe>
    15a4:	cf 01       	movw	r24, r30
    15a6:	08 95       	ret
    15a8:	46 2f       	mov	r20, r22
    15aa:	47 70       	andi	r20, 0x07	; 7
    15ac:	40 5d       	subi	r20, 0xD0	; 208
    15ae:	41 93       	st	Z+, r20
    15b0:	b3 e0       	ldi	r27, 0x03	; 3
    15b2:	0f d0       	rcall	.+30     	; 0x15d2 <__ultoa_invert+0x86>
    15b4:	c9 f7       	brne	.-14     	; 0x15a8 <__ultoa_invert+0x5c>
    15b6:	f6 cf       	rjmp	.-20     	; 0x15a4 <__ultoa_invert+0x58>
    15b8:	46 2f       	mov	r20, r22
    15ba:	4f 70       	andi	r20, 0x0F	; 15
    15bc:	40 5d       	subi	r20, 0xD0	; 208
    15be:	4a 33       	cpi	r20, 0x3A	; 58
    15c0:	18 f0       	brcs	.+6      	; 0x15c8 <__ultoa_invert+0x7c>
    15c2:	49 5d       	subi	r20, 0xD9	; 217
    15c4:	31 fd       	sbrc	r19, 1
    15c6:	40 52       	subi	r20, 0x20	; 32
    15c8:	41 93       	st	Z+, r20
    15ca:	02 d0       	rcall	.+4      	; 0x15d0 <__ultoa_invert+0x84>
    15cc:	a9 f7       	brne	.-22     	; 0x15b8 <__ultoa_invert+0x6c>
    15ce:	ea cf       	rjmp	.-44     	; 0x15a4 <__ultoa_invert+0x58>
    15d0:	b4 e0       	ldi	r27, 0x04	; 4
    15d2:	a6 95       	lsr	r26
    15d4:	97 95       	ror	r25
    15d6:	87 95       	ror	r24
    15d8:	77 95       	ror	r23
    15da:	67 95       	ror	r22
    15dc:	ba 95       	dec	r27
    15de:	c9 f7       	brne	.-14     	; 0x15d2 <__ultoa_invert+0x86>
    15e0:	00 97       	sbiw	r24, 0x00	; 0
    15e2:	61 05       	cpc	r22, r1
    15e4:	71 05       	cpc	r23, r1
    15e6:	08 95       	ret
    15e8:	9b 01       	movw	r18, r22
    15ea:	ac 01       	movw	r20, r24
    15ec:	0a 2e       	mov	r0, r26
    15ee:	06 94       	lsr	r0
    15f0:	57 95       	ror	r21
    15f2:	47 95       	ror	r20
    15f4:	37 95       	ror	r19
    15f6:	27 95       	ror	r18
    15f8:	ba 95       	dec	r27
    15fa:	c9 f7       	brne	.-14     	; 0x15ee <__ultoa_invert+0xa2>
    15fc:	62 0f       	add	r22, r18
    15fe:	73 1f       	adc	r23, r19
    1600:	84 1f       	adc	r24, r20
    1602:	95 1f       	adc	r25, r21
    1604:	a0 1d       	adc	r26, r0
    1606:	08 95       	ret

00001608 <_exit>:
    1608:	f8 94       	cli

0000160a <__stop_program>:
    160a:	ff cf       	rjmp	.-2      	; 0x160a <__stop_program>
